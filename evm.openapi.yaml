openapi: 3.0.1
info:
  title: EVM
  description: ''
  version: 1.0.0
tags:
  - name: public
  - name: private
paths:
  /v1/public/futures:
    get:
      summary: Get Market Info for All Trading Pairs
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/futures`

        Get basic market information for all the trading pairs.
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuturesInfoResponse'

  /v1/public/market_trades:
    get:
      summary: Get Market Trades
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/market_trades`

        Get the latest market trades.
      tags:
        - public
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: PERP_NEAR_USDC
          schema:
            type: string
        - name: limit
          in: query
          description: Numbers of trades want to query.
          required: false
          example: '10'
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradesResponse'

  /v1/public/volume/stats:
    get:
      summary: Get Builder Volume
      deprecated: false
      description: >

        **Limit: 10 requests per 1 second per IP address**


        `GET /v1/public/volume/stats`


        Get the latest volume statistics of Orderly and its associated builders.
        Note that for builder volume, the volume is counted as the sum of the
        maker and taker volume, while for the full Orderly platform, the volume
        is the total amount matched on the platform (ie taker and maker are not
        double-counted.)
      tags:
        - public
      parameters:
        - name: broker_id
          in: query
          description: Provide broker_id to obtain statistics of a specific builder
          required: false
          example: test_broker
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeStatsResponse'

  /v1/public/broker/name:
    get:
      summary: Get Builder List
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/broker/name?broker_id={broker_id}`

        Get the list of builders currently onboarded on Orderly Network.
      tags:
        - public
      parameters:
        - name: broker_id
          in: query
          description: If provided, it will only return details for the particular builder.
          required: false
          example: test_broker
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerListResponse'

  /v1/public/funding_rates:
    get:
      summary: Get Predicted Funding Rates for All Markets
      deprecated: false
      description: >-

        **Limit: 10 requests per 1 second per IP address**


        `GET /v1/public/funding_rates`


        Get predicted funding rates for all futures trading pairs.


        Get the : 

        * `last_funding_rate` : latest hourly funding rate for all the markets
        for the last funding period (dt = 8h)

        * `est_funding_rate` : rolling average of all funding rates over the
        last 8 hours
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingRatesResponse'

  /v1/public/funding_rate/{symbol}:
    get:
      summary: Get Predicted Funding Rate for One Market
      deprecated: false
      description: |

        **Limit: 30 requests per 1 second per IP address**

        `GET /v1/public/funding_rate/{symbol}`

        Get latest funding rate for one market.
      tags:
        - public
      parameters:
        - name: symbol
          in: path
          description: ''
          required: true
          example: PERP_ETH_USDC
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingRateResponse'

  /v1/public/funding_rate_history:
    get:
      summary: Get Funding Rate History for One Market
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**


        `GET /v1/public/funding_rate_history`


        Get funding rate history for one market.
      tags:
        - public
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: PERP_NEAR_USDC
          schema:
            type: string
        - name: start_t
          in: query
          description: >-
            start time range that you wish to query, noted that the time stamp
            is a 13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: >-
            end time range that you wish to query, noted that the time stamp is
            a 13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: the page you wish to query.
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: 'Default: 60'
          required: false
          example: ''
          schema:
            type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingRateHistoryResponse'
  /v1/public/futures/{symbol}:
    get:
      summary: Get Market Info for One Trading Pair
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/futures/{symbol}`

        Get basic market information for one trading pair.
      tags:
        - public
      parameters:
        - name: symbol
          in: path
          description: ''
          required: true
          example: PERP_ETH_USDC
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuturesInfoResponse'
  /v1/public/liquidation:
    get:
      summary: Get Positions Under Liquidation
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/liquidation`
      tags:
        - public
      parameters:
        - name: start_t
          in: query
          description: >-
            start time range that you wish to query, noted that the time stamp
            is a 13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: >-
            end time range that you wish to query, noted that the time stamp is
            a 13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: the page you wish to query.
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: 'Default: 60'
          required: false
          example: ''
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidationResponse'
  /v1/public/liquidated_positions:
    get:
      summary: Get Liquidated Positions Info
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/liquidated_positions`
      tags:
        - public
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: PERP_ETH_USDC
          schema:
            type: string
        - name: start_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: end_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidatedPositionsResponse'
  /v1/public/info/{symbol}:
    get:
      summary: Get Order Rules per Market
      deprecated: false
      description: "
        **Limit: 10 requests per 1 second per IP address**


        `GET /v1/public/info/{symbol}`


        This endpoint provides all the values for the rules that an order need
        to fulfil in order for it to be placed successfully. The rules are
        defined as follows:


        Price filter


        - `price` >= `quote_min`

        - `price` =< `quote_max`

        - `(price - quote_min) % quote_tick` should equal to zero

        - `price` =< `asks[0].price * (1 + price_range)` when BUY

        - `price` >= `bids[0].price * (1 - price_range)` when SELL


        Size filter


        - `base_min` =< `quantity` =< `base_max`

        - `(quantity - base_min) % base_tick` should equal to zero


        Min Notional filter


        - `price * quantity` should greater than `min_notional`


        Risk Exposure filer


        - Order size should be within holding threshold. See
        [account_info](/build-on-evm/evm-api/restful-api/get-account-information)
        "
      tags:
        - public
      parameters:
        - name: symbol
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeInformationResponse'
  /v1/public/token:
    get:
      summary: Get Supported Collateral Info
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/token`

        Retrieves the available tokens to be used as collateral within Orderly Network.
      tags:
        - public
      parameters:
        - name: chain_id
          in: query
          description: 'Filter results by chain_id'
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenInfoResponse'
  /v1/public/info:
    get:
      summary: Get Available Symbols
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second per IP address**


        `GET /v1/public/info`


        Get available symbols that Orderly Network supports, and also send order
        rules for each symbol. The definition of rules can be found at [Get Order Rules per Market](/build-on-evm/evm-api/restful-api/public/get-order-rules-per-market)
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableSymbolsResponse'
  /v1/public/insurancefund:
    get:
      summary: Get Insurance Fund Info
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/insurancefund`
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceFundResponse'
  /v1/tv/config:
    get:
      summary: Get TradingView Localized Config Info
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/tv/config`
      tags:
        - public
      parameters:
        - name: locale
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TvConfigResponse'
  /v1/tv/history:
    get:
      summary: Get TradingView History Bars
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/tv/history?symbol={}&resolution={}&from={}&to={}`
      tags:
        - public
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: resolution
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: from
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: to
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TvHistoryResponse'
  /v1/tv/symbol_info:
    get:
      summary: Get TradingView Symbol Info
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/tv/symbol_info`
      tags:
        - public
      parameters:
        - name: group
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TvSymbolResponse'
  /v1/positions:
    get:
      summary: Get All Positions Info
      deprecated: false
      description: |
        **Limit: 30 requests per 10 second per user**

        `GET /v1/positions`
      tags:
        - private
      parameters:
      - $ref: '#/components/parameters/orderly_timestamp'
      - $ref: '#/components/parameters/orderly_account_id'
      - $ref: '#/components/parameters/orderly_key'
      - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsResponse'
  /v1/position/{symbol}:
    get:
      summary: Get One Position Info
      deprecated: false
      description: |
        **Limit: 30 requests per 10 second per user**

        `GET /v1/position/{symbol}`
      tags:
        - private
      parameters:
        - name: symbol
          in: path
          description: ''
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionResponse'
  /v1/funding_fee/history:
    get:
      summary: Get Funding Fee History
      deprecated: false
      description: |
        **Limit: 20 requests per 60 second per user**

        `GET /v1/funding_fee/history`

        Get funding fee history.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: 'omit to get funding fee history for all symbols'
          required: false
          example: PERP_ETH_USDC
          schema:
            type: string
        - name: start_t
          in: query
          description: >-
            start time range that you wish to query, noted that the time stamp
            is a 13-digits timestamp.
          required: false
          example: ''
          schema:
            type: string
        - name: end_t
          in: query
          description: >-
            end time range that you wish to query, noted that the time stamp is
            a 13-digits timestamp.
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: the page you wish to query.
          required: false
          example: ''
          schema:
            type: string
        - name: size
          in: query
          description: 'Default: 60'
          required: false
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingFeeHistoryResponse'
  /v1/client/liquidator_liquidations:
    get:
      summary: Get Liquidated Positions by Liquidator
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/client/liquidator_liquidations`
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: start_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidatorLiquidationsResponse'
  /v1/client/leverage:
    post:
      summary: Update Leverage Setting
      deprecated: false
      description: |
        **Limit: 5 requests per 60 second per user**

        `POST /v1/client/leverage`

        Choose maximum leverage for futures mode
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                leverage:
                  type: integer
                  description: Integer between 1 to 50
              required:
                - leverage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyDataResponse'

  /v1/public/leverage:
    post:
      summary: Get Max Leverage Setting
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `POST /v1/public/leverage`

        Get max leverage setting
      tags:
        - public
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLeverageSettingResponse'
  /v1/liquidations:
    get:
      summary: Get Liquidated Positions of Account
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/liquidations`
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: start_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidationsResponse'
  /v1/liquidation:
    post:
      summary: Claim Liquidated Positions
      deprecated: false
      description: |
        **Limit: 5 requests per 1 second per IP address**

        `POST /v1/liquidation`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiquidationBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLiquidationResponse'
  /v1/order:
    post:
      summary: Create Order
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second**


        `POST /v1/order`


        Place order maker/taker, the order executed information will be update
        from websocket stream.

        will response immediately with an order created message.


        `MARKET` type order behavior: it matches until the full size is
        executed. If the size is too large (larger than whole book) or the
        matching price exceeds the price limit (refer to `price_range`), then
        the remaining quantity will be cancelled.


        `IOC` type order behavior: it matches as much as possible at the
        order_price. If not fully executed, then remaining quantity will be
        cancelled.


        `FOK` type order behavior: if the order can be fully executed at the
        order_price then the order gets fully executed otherwise would be
        cancelled without any execution.


        `POST_ONLY` type order behavior: if the order will be executed with any
        maker trades at the time of placement, then it will be cancelled without
        any execution.


        `ASK` type order behavior: the order price is guranteed to be the best
        ask price of the orderbook at the time it gets accepted.


        `BID` type order behavior: the order price is guranteed to be the best
        bid price of the orderbook at the time it gets accepted.


        `visible_quantity` behavior: it sets the maximum quantity to be shown on
        orderbook. By default, it is equal to order_quantity, negative number
        and number larger than `order_quantity` is not allowed. If it sets to 0,
        the order would be hidden from the orderbook. It doesn't work for
        `MARKET`/`IOC`/`FOK` orders since orders with these types would be
        executed and cancelled immediately and not be shown on orderbook. For
        `LIMIT`/`POST_ONLY` order, as long as it's not complete,
        `visible_quantity` is the maximum quantity that shown on orderbook.


        `order_amount` behavior: for `MARKET`/`BID`/`ASK` order, order can be
        placed by `order_amount` instead of `order_quantity`. It's the size of
        the order in terms of the quote currency instead of the base currency.
        The order would be rejected if  both `order_amount` and `order_quantity`
        are provided. The precision of the number should be within 8 digits.


        `client_order_id` behavior: customized order_id, a unique id among open
        orders. Orders with the same `client_order_id` can be accepted only when
        the previous one if completed, otherwise the order will be rejected.


        For `MARKET`/`BID`/`ASK` order, `order_amount` is not supported when
        placing SELL order while `order_quantity` is not supported when placing
        BUY order.


        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
        - $ref: '#/components/parameters/recv_window_header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOrderBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOrderResponse'
    delete:
      summary: Cancel Order
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `DELETE /v1/order?order_id={order_id}&symbol={symbol}`

        Cancels a single order by `order_id`.

        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: order_id
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
    put:
      summary: Edit Order
      deprecated: false
      description: >-
        **Limit: 10 request per 1 second**


        `PUT /v1/order`


        Edit a pending order by `order_id`. Only the `order_price` or
        `order_quantity` can be amended.


        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOrderResponse'
  /v1/order/{order_id}:
    get:
      summary: Get Order by order_id
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/order/{order_id}`

        Get details of a single order by `order_id`.
      tags:
        - private
      parameters:
        - name: order_id
          in: path
          description: id of the order
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
  /v1/trades:
    get:
      summary: Get Trades
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/trades`

        Return client’s trades history within a time range.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: start_t
          in: query
          description: >-
            start time range that wish to query, noted the time stamp is
            13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: >-
            end time range that wish to query, noted the time stamp is 13-digits
            timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: the page you wish to query.
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: 'the page size you wish to query. (max: 500)'
          required: false
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradesResponse'
  /v1/client/holding:
    get:
      summary: Get Current Holding
      deprecated: false
      description: |
        **Limit: 10 requests per 1 seconds**

        `GET /v1/client/holding`

        Get the current summary of user token holdings.
      tags:
        - private
      parameters:
        - name: all
          in: query
          description: >-
            true/false. If true then will return all token even if balance is
            empty.
          required: false
          example: ''
          schema:
            type: boolean
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientHoldingResponse'
  /v1/client/info:
    get:
      summary: Get Account Information
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `GET /v1/client/info`

        Get basic account information including current user fee rates.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInfoResponse'
  /v1/orders:
    get:
      summary: Get Orders
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `GET /v1/orders`


        Get orders by customized filters.


        For filter by status, one can reference special bundled statuses below
        for ease of access of Open (ie `INCOMPLETE`) orders or `COMPLETED`
        orders.


        - `INCOMPLETE` = `NEW` + `PARTIAL_FILLED`

        - `COMPLETED` = `CANCELLED` + `FILLED`
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: side
          in: query
          description: '`BUY`/`SELL`'
          required: false
          example: ''
          schema:
            type: string
        - name: order_type
          in: query
          description: '`LIMIT`/`MARKET`'
          required: false
          example: ''
          schema:
            type: string
        - name: status
          in: query
          description: >-
            `NEW`/`CANCELLED`/`PARTIAL_FILLED`/`FILLED`/`REJECTED`/`INCOMPLETE`/`COMPLETED`
          required: false
          example: ''
          schema:
            type: string
        - name: order_tag
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: start_t
          in: query
          description: >-
            start time range that wish to query, noted the time stamp is
            13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: >-
            end time range that wish to query, noted the time stamp is 13-digits
            timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: the page you wish to query.
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: 'the page size you wish to query (max: 500)'
          required: false
          example: ''
          schema:
            type: number
        - name: sort_by
          in: query
          description: "If empty: 
          
          
          Descending order by updated_time if user passed update_start_t or update_end_t; descending order by order_id if updated_time are the same; 
          
          
          Otherwise descending order by created_time; descending order by order_id if created_time are the same;
          
          
          If not empty:
          
          
          If sort_by == `CREATED_TIME_DESC`, descending order by created_time. Descending order by order_id if created_time are same;
          
          
          If sort_by == `CREATED_TIME_ASC`, ascending order by created_time. Ascending order by order_id if created_time are same;
          
          
          If sort_by == `UPDATED_TIME_DESC`, descending order by updated_time. Descending order by order_id if updated_time are same;
          
          
          If sort_by == `UPDATED_TIME_ASC`, ascending order by updated_time. Ascending order by order_id if updated_time are same;
          "
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'
    delete:
      summary: Cancel All Pending Orders
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `DELETE /v1/orders?symbol={symbol}`


        Cancel a list of orders, filtered by `symbol` optionally. This request
        will cancel all open orders within the filter criteria, and will cancel
        all open orders if no filter is provided.


        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllPendingAlgoOrderResponse'
  /v1/client/statistics:
    get:
      summary: Get User Statistics
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `GET /v1/client/statistics`

        Get statistics of the user account
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientStatisticsResponse'
  /v1/asset/history:
    get:
      summary: Get Asset History
      deprecated: false
      description: |
        **Limit 10 requests per 60 seconds**

        `GET /v1/asset/history`

        Get asset history, including token deposits/withdrawals.
      tags:
        - private
      parameters:
        - name: token
          in: query
          description: token name you want to search
          required: false
          example: ''
          schema:
            type: string
        - name: side
          in: query
          description: '`DEPOSIT`/`WITHDRAW`'
          required: false
          example: ''
          schema:
            type: string
        - name: status
          in: query
          description: '`NEW`/`CONFIRM`/`PROCESSING`/`COMPLETED`/`FAILED`/`PENDING_REBALANCE`'
          required: false
          example: ''
          schema:
            type: string
        - name: start_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetHistoryResponse'
  /v1/claim_insurance_fund:
    post:
      summary: Claim Insurance Fund
      deprecated: false
      description: |
        **Limit: 5 requests per 1 second**

        `POST /v1/claim_insurance_fund`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimInsuranceFundBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimInsuranceFundResponse'
  /v1/public/system_info:
    get:
      summary: Get System Maintenance Status
      deprecated: false
      description: >-
        **Limit: 1 requests per 1 second per IP address**
        
        
        `GET /v1/public/system_info`
        
        
        Retreive the current system maintenance status of Orderly Network. A
        return value of status = 0 means the system is functioning properly and
        a return value of status = 2 means the system is under maintenance.
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfoResponse'
  /v1/registration_nonce:
    get:
      summary: Get Registration Nonce
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second per IP address**


        `GET /v1/registration_nonce`


        Retrieve a nonce used for registering an account on Orderly Network. The
        validity of the nonce value is `2` minutes. Each nonce can only be used
        once (ie for one account).
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationNonceResponse'
  /v1/get_account:
    get:
      summary: Check if Wallet is Registered
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/get_account`

        Check whether a wallet has a registered account with provided broker_id.
      tags:
        - public
      parameters:
        - name: address
          in: query
          description: The address of the user wallet
          required: true
          example: ''
          schema:
            type: string
        - name: broker_id
          in: query
          description: The builder that the account is registered on
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'

  /v1/get_broker:
    get:
      summary: Check if Address is Registered
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/get_broker`

        Check whether an address is registered already.
      tags:
        - public
      parameters:
        - name: address
          in: query
          description: The address of the user
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBrokerResponse'
  /v1/register_account:
    post:
      summary: Register Account
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second per IP address**


        `POST /v1/register_account`


        Registers a new account to Orderly Network. Note an account is unique
        for each wallet address + builder id (ie the same wallet address can have
        multiple accounts with Orderly Network, 1 with each builder)
      tags:
        - public
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAccountBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAccountResponse'
  /v1/get_orderly_key:
    get:
      summary: Get Orderly Key
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/get_orderly_key`

        Check the validity of an Orderly access key attached to the account.
      tags:
        - public
      parameters:
        - name: account_id
          in: query
          description: The account id of the user.
          required: true
          example: ''
          schema:
            type: string
        - name: orderly_key
          in: query
          description: The public key of the Orderly access key.
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderlyKeyResponse'
  /v1/orderly_key:
    post:
      summary: Add Orderly Key
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `POST /v1/orderly_key`

        Adds an Orderly access key to an account.
      tags:
        - public
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderlyKeyBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderlyKeyResponse'

  /v1/client/remove_orderly_key:
    post:
      summary: Remove Orderly Key
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `POST /v1/client/remove_orderly_key`

        Remove an Orderly key from an account, deactivating it from all usage
      tags:
        - private
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveOrderlyKeyBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /v1/public/config:
    get:
      summary: Get Leverage Configuration
      deprecated: false
      description: |

        **Limit: 10 requests per 1 second per IP address**

        `GET v1/public/config`
      tags:
        - public
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
  /v1/public/chain_info:
    get:
      summary: Get Supported Chains per Builder
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/chain_info`

        Get chains specified builder is available on.
      tags:
        - public
      parameters:
        - name: broker_id
          in: query
          description: return chains that supports this builder
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainInfoResponse'
#  /v1/public/chain_info:
#    get:
#      summary: Get Vault Chain Config
#      deprecated: false
#      description: |
#        **Limit: 10 requests per 1 second per IP address**
#
#        `GET /v1/public/chain_info`
#      tags:
#        - public
#      responses:
#        "200":
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ChainInfoResponse'
  /v1/batch-order:
    post:
      summary: Batch Create Order
      deprecated: false
      description: >-
        **Limit: 1 request per 1 second**


        `POST /v1/batch-order`


        Creates a batch of orders as a list according to the same rules as a
        single Create Order.


        Parameters for each order within the batch will be the same as the
        create single order. The batch of orders should be sent as a JSON array
        containing all the orders. The maximum number of orders that can be sent
        in 1 batch order request is 10. Each order within the batch order
        request is counted as 1 order towards the overall create order rate
        limit.




        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
        - $ref: '#/components/parameters/recv_window_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOrderResponse'
    delete:
      summary: Batch Cancel Orders
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `DELETE /v1/batch-order?order_ids={order_id1},{order_id2}`


        Cancel a list of orders by `order_ids`. The maximum orders that can be
        cancelled within 1 batch cancel request is 10. 


        This endpoint will return invalid order_id error if 0 order_ids are
        given or all of the given order_ids are invalid. 


        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - name: order_ids
          in: query
          description: >-
            List of order_ids, comma-separated, with a maximum of 10 order ids
            per request.
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllPendingAlgoOrderResponse'
  /v1/client/order:
    delete:
      summary: Cancel Order By client_order_id
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `DELETE
        /v1/client/order?client_order_id={client_order_id}&symbol={symbol}`


        Cancel an order by `client_order_id`.


        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: client_order_id
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
  /v1/client/batch-order:
    delete:
      summary: Batch Cancel Orders By client_order_id
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `DELETE
        /v1/client/batch-order?client_order_ids={client_order_id1},{client_order_id2}`


        Cancel a list of orders by `client_order_ids`. The maximum orders that
        can be cancelled within 1 batch cancel request is 10.


        This endpoint will return invalid client_order_id error if 0
        client_order_ids are given or all of the given client_order_ids are
        invalid. 


        Note: This endpoint requires `trading` scope in Orderly Key.
      tags:
        - private
      parameters:
        - name: client_order_ids
          in: query
          description: >-
            List of client_order_ids, comma-separated, with a maximum of 10
            order ids per request.
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllPendingAlgoOrderResponse'
  /v1/client/order/{client_order_id}:
    get:
      summary: Get Order by client_order_id
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/client/order/{client_order_id}`

        Get details of a single order by `client_order_id`.
      tags:
        - private
      parameters:
        - name: client_order_id
          in: path
          description: client_order_id of the order
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientOrderResponse'
  /v1/orderbook/{symbol}:
    get:
      summary: Orderbook Snapshot
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `GET /v1/orderbook/{symbol}`


        Snapshot of the current orderbook. Price of asks/bids are in descending
        order.
      tags:
        - private
      parameters:
        - name: symbol
          in: path
          description: ''
          required: true
          example: PERP_BTC_USDC
          schema:
            type: string
        - name: max_level
          in: query
          description: the levels wish to show on both side.
          required: false
          example: ''
          schema:
            type: integer
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderbookResponse'
  /v1/kline:
    get:
      summary: Get Kline
      deprecated: false
      description: >

        **Limit: 10 requests per 1 second**


        `GET /v1/kline`


        Get the latest klines (OHLC) of the specified symbol.


        Please note that for symbols with low trading activity, the kline might
        be generated through the mid price of the orderbook in addition to any
        executed trades on the platform.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: PERP_BTC_USDC
          schema:
            type: string
        - name: type
          in: query
          description: 1m/5m/15m/30m/1h/4h/12h/1d/1w/1mon/1y
          required: true
          example: ''
          schema:
            type: string
        - name: limit
          in: query
          description: Numbers of klines. Maximum of 1000 klines.
          required: false
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlineResponse'
  /v1/order/{order_id}/trades:
    get:
      summary: Get All Trades of Specific Order
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/order/:order_id/trades`

        Get specific trades of an order by `order_id`.
      tags:
        - private
      parameters:
        - name: order_id
          in: path
          description: ''
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTradesResponse'
  /v1/trade/{trade_id}:
    get:
      summary: Get Trade
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/trade/{trade_id}`

        Get specific transaction details by `trade_id`.
      tags:
        - private
      parameters:
        - name: trade_id
          in: path
          description: id of the trade
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeResponse'
  /v1/client/maintenance_config:
    post:
      summary: Set Maintenance Config
      deprecated: false
      description: >
        **Limit: 10 requests per 60 seconds**


        `POST /v1/client/maintenance_config`


        Set the user config for whether the system should automatically cancel
        the user's pending orders during maintenance.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientMaintenanceConfigBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientMaintenanceConfigResponse'
  /v1/volume/user/stats:
    get:
      summary: Get User Volume Statistics
      deprecated: false
      description: |-
        **Limit 10 requests per 60 seconds**

        `GET /v1/volume/user/stats`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeStatsResponse'
  /v1/volume/user/daily:
    get:
      summary: Get User Daily Volume
      deprecated: false
      description: |
        **Limit 10 requests per 60 seconds**

        `GET /v1/volume/user/daily`
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: Format YYYY-MM-DD
          required: true
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: Format YYYY-MM-DD
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyVolumeResponse'
  /v1/withdraw_nonce:
    get:
      summary: Get Withdrawal Nonce
      deprecated: false
      description: >
        **Limit 10 requests per 1 seconds**


        `GET /v1/withdraw_nonce`


        Retrieve a nonce used for requesting a withdrawal on Orderly Network.
        Each nonce can only be used once.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawNonceReponse'
  /v1/settle_nonce:
    get:
      summary: Get Settle PnL Nonce
      deprecated: false
      description: >
        **Limit: 10 requests per 1 second**


        `GET /v1/settle_nonce`


        Retrieve a nonce used for requesting a withdrawal on Orderly Network.
        Each nonce can only be used once.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettleNonceResponse'
  /v1/withdraw_request:
    post:
      summary: Create Withdraw Request
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second per IP address**


        `POST /v1/withdraw_request`


        `verifyingContract` should use:
        `0x6F7a338F2aA472838dEFD3283eB360d4Dff5D203`.


        This API will throw an error with message `22 - Cross-chain withdrawal
        required for this withdrawal request.` if `allow_cross_chain_withdrawal`
        is `false` while the request is a cross-chain request.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawResponse'
  /v1/settle_pnl:
    post:
      summary: Request PnL Settlement
      deprecated: false
      description: >
        **Limit: 1 requests per 1 second**


        `POST /v1/settle_pnl`


        `verifyingContract` should use:
        `0x6F7a338F2aA472838dEFD3283eB360d4Dff5D203`.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlePnlBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlePnlResponse'
              examples:
                "1":
                  summary: Successful examples
                  value:
                    success: true
                    data:
                      settle_pnl_id: 889
                    timestamp: 1692246987774
  /v1/pnl_settlement/history:
    get:
      summary: Get PnL Settlement History
      deprecated: false
      description: |
        **Limit: 20 requests per 1 second**

        `GET /v1/pnl_settlement/history`

        Retrieve the historical PnL settlement history of the account.
      tags:
        - private
      parameters:
        - name: start_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: integer
        - name: end_t
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: integer
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: integer
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PnlSettlementHistoryResponse'
  /v1/client/key_info:
    get:
      summary: Get Current Orderly Key Info
      deprecated: false
      description: |
        **Limit 10 requests per 60 seconds**

        `GET /v1/client/key_info`

        Retrieve all the registered Orderly key pairs under the account.
      tags:
        - private
      parameters:
        - name: key_status
          in: query
          description: Filter by the status of the key (ACTIVE / REMOVING / REMOVED)
          required: false
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyInfoResponse'
  /v1/client/orderly_key_ip_restriction:
    get:
      summary: Get Orderly Key IP Restriction
      deprecated: false
      description: |
        **Limit 10 requests per 60 seconds**

        `GET /v1/client/orderly_key_ip_restriction`

        Retrieves the current IP restriction of a particular Orderly key.
      tags:
        - private
      parameters:
        - name: orderly_key
          in: query
          description: The Orderly Key to query the IP restriction list
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
  /v1/client/set_orderly_key_ip_restriction:
    post:
      summary: Set Orderly Key IP Restriction
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `POST /v1/client/set_orderly_key_ip_restriction`

        Set the IP restrictions of a particular Orderly key under the account.
      tags:
        - private
      parameters:
        - name: orderly_key
          in: query
          description: The Orderly Key to set the IP restriction list.
          required: true
          example: ''
          schema:
            type: string
        - name: ip_restriction_list
          in: query
          description: >-
            List of IP or IP ranges (comma separated), that will be allowed to
            place orders with the orderly_key.
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetIpRestrictionResponse'
  /v1/client/reset_orderly_key_ip_restriction:
    post:
      summary: Reset Orderly Key IP Restriction
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `POST /v1/client/reset_orderly_key_ip_restriction`

        Reset the IP restriction of a particular Orderly key under the account.
      tags:
        - private
      parameters:
        - name: orderly_key
          in: query
          description: The Orderly Key to set the IP restriction list
          required: true
          example: ''
          schema:
            type: string
        - name: reset_mode
          in: query
          description: >-
            The new mode of the IP restriction for this Orderly Key
            (ALLOW_ALL_IPS, DISALLOW_ALL_IPS).
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /v1/notification/inbox/notifications:
    get:
      summary: Get All Notifications
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `GET /v1/notification/inbox/notifications`

        Get all notifications for the user.

        Currently the only supported message type is the order filled message.
      tags:
        - private
      parameters:
        - name: type
          in: query
          description: Filter nofications by type (TRADE / SYSTEM).
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllNotificationsResponse'
  /v1/notification/inbox/unread:
    get:
      summary: Get Unread Notifications
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `GET /v1/notification/inbox/unread`

        Get the information on unread messages for the user.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnreadNotificationsResponse'
  /v1/notification/inbox/mark_read:
    post:
      summary: Set Read Status of Notifications
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `POST /v1/notification/inbox/mark_read`

        Set the read status on a list of notifications for a user.
      tags:
        - private
      parameters:
        - name: flag
          in: query
          description: The value of the read flag, where 1 = READ and 0 = UNREAD
          required: true
          example: ''
          schema:
            type: number
        - name: ids
          in: query
          description: The list of notification ids to flag as read/unread.
          required: true
          example: ''
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /v1/notification/inbox/mark_read_all:
    post:
      summary: Set Read Status of All Notifications
      deprecated: false
      description: |
        **Limit: 10 requests per 60 seconds**

        `POST /v1/notification/inbox/mark_read_all`

        Set the read status on all notifications for a user.
      tags:
        - private
      parameters:
        - name: flag
          in: query
          description: The value of the read flag, where 1 = READ and 0 = UNREAD
          required: true
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /v1/public/vault_balance:
    get:
      summary: Get Vault Balance
      deprecated: false
      description: ''
      tags:
        - public
      parameters:
        - name: chain_id
          in: query
          description: id of the chain you wish to query
          required: false
          example: ''
          schema:
            type: string
        - name: token
          in: query
          description: the token you wish to query
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultBalanceResponse'
  /v1/faucet/usdc:
    post:
      summary: Get Faucet USDC(Testnet Only)
      deprecated: false
      description: >-
        `GET https://testnet-operator-evm.orderly.org/v1/faucet/usdc`


        Receive 1,000 USDC in the Testnet environment. Each account may only use
        the faucet a maximum of 5 times.


        This API is only available on Testnet so make sure to use Testnet domain
        as above instead of Mainnet domain.
      tags:
        - public
      parameters:
        - name: chain_id
          in: query
          description: The chain ID that the test USDC should be deposited to
          required: true
          example: ''
          schema:
            type: string
        - name: user_address
          in: query
          description: The address of the user account
          required: true
          example: ''
          schema:
            type: string
        - name: broker_id
          in: query
          description: Builder ID of an account
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
  /v1/algo/order:
    post:
      summary: Create Algo Order
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second**


        `POST /v1/algo/order`


        Place maker/taker order that requires an additional trigger for order
        execution such as stop orders.


        `STOP` type order bahavior: an order to buy or sell at the market/limit price
        once the asset has traded at or through a specified price (the "stop
        price"). If the asset reaches the stop price, the order becomes a market
        order and is filled at the next available market price.


        To place `Positional TP/SL` order, the input fields is 2 layer and includes an array of the objects named childOrder. The take-profit or stop-loss order should be the objects in the array. For the sub-order in childOrder, please input 'CLOSE_POSITION' as type, and 'TAKE_PROFIT' or 'STOP_LOSS' in algoType field.


        Note: This endpoint requires trading scope in Orderly Key.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
        - $ref: '#/components/parameters/recv_window_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                symbol:
                  type: string
                algo_type:
                  type: string
                  description: "`STOP`/`TP_SL`/`POSITIONAL_TP_SL`"
                client_order_id:
                  type: string
                  description: '36 length, default: null'
                type:
                  type: string
                  description: "`LIMIT` / `MARKET`, required if `algo_type` = `STOP`"
                price:
                  type: number
                  description: "Optional for `TP_SL` and `POSTIONAL_TP_SL`"
                quantity:
                  type: number
                  description: >-
                    For `MARKET`/`ASK`/`BID` order, if order_amount is given, it is
                    not required.
                    Not required if type is `POSITIONAL_TP_SL`.
                trigger_price_type:
                  type: string
                  description: Only `MARK_PRICE` is available for now.
                trigger_price:
                  type: number
                reduce_only:
                  type: boolean
                visible_quantity:
                  type: boolean
                  description: Default false
                side:
                  type: string
                  description: '`SELL`/`BUY`, required if `STOP` type'
                order_tag:
                  type: string
                child_orders:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateAlgoOrderChildRequest'
                  description: "Array of `CreateAlgoOrderChildRequest`"
              required:
                - symbol
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAlgoOrderResponse'
    put:
      summary: Edit Algo Order
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second**


        `PUT /v1/algo/order`


        Edit a pending algo order by `order_id`. Only the price or quantity can
        be amended.


        Note: This endpoint requires trading scope in Orderly Key.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                price:
                  type: number
                quantity:
                  type: number
                trigger_price:
                  type: number
                trigger_price_type:
                  type: string
                child_orders:
                  type: array
                  items:
                    $ref: '#/components/schemas/EditAlgoOrderChildRequest'
                  description: "Array of `EditAlgoOrderChildRequest`"
#                EditAlgoOrderChildReq:
#                  type: object
#                  properties:
#                    order_id:
#                      type: string
#                    trigger_price:
#                      type: number
#                    price:
#                      type: number
#                    quantity:
#                      type: number
#                    is_activated:
#                      type: string
#                    trigger_price_type:
#                      type: string
#                    child_orders:
#                      type: array
#                      items:
#                        object
#                      description: Array of `EditAlgoOrderChildRequest`
              required:
                - order_id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOrderResponse'
    delete:
      summary: Cancel Algo Order
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `DELETE /v1/algo/order?order_id={order_id}&symbol={symbol}`

        Cancels a single algo order by `order_id`.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: order_id
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
  /v1/algo/client/order:
    delete:
      summary: Cancel Algo Order By client_order_id
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second**


        `DELETE
        /v1/algo/client/order?client_order_id={client_order_id}&symbol={symbol}`


        Cancel an algo order by `client_order_id`.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - name: client_order_id
          in: query
          description: ''
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
  /v1/algo/orders:
    delete:
      summary: Cancel All Pending Algo Orders
      deprecated: false
      description: |-
        **Limit: 10 requests per 1 second**

        `DELETE /v1/algo/orders?symbol={symbol}`

        Cancel all pending algo orders.
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: algo_type
          in: query
          description: "Note: `STOP` will cancel both `TAKE_PROFIT` and `STOP_LOSS`"
          required: false
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllPendingAlgoOrderResponse'
    get:
      summary: Get Algo Orders
      deprecated: false
      description: >-
        **Limit: 10 requests per 1 second**


        `GET /v1/algo/orders`


        Get algo order details by customized filters.


        For filter by status, one can reference special bundled statuses below
        for ease of access of Open (i.e `INCOMPLETE`) orders or `COMPLETED`
        orders.


        `INCOMPLETE` = `NEW` + `PARTIAL_FILLED`



        `COMPLETED` = `CANCELLED` + `FILLED`
      tags:
        - private
      parameters:
        - name: symbol
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: order_type
          in: query
          description: '`LIMIT`/`MARKET`'
          required: false
          example: ''
          schema:
            type: string
        - name: status
          in: query
          description: >-
            `NEW`/`CANCELLED`/`PARTIAL_FILLED`/`FILLED`/`REJECTED`/`INCOMPLETE`/`COMPLETED`
          required: false
          example: ''
          schema:
            type: string
        - name: order_tag
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: start_t
          in: query
          description: >-
            start time range that wish to query, noted the time stamp is
            13-digits timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: end_t
          in: query
          description: >-
            end time range that wish to query, noted the time stamp is 13-digits
            timestamp.
          required: false
          example: ''
          schema:
            type: number
        - name: page
          in: query
          description: the page you wish to query.
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: 'the page size you wish to query (max: 500)'
          required: false
          example: ''
          schema:
            type: number
        - name: side
          in: query
          description: '`BUY`/`SELL`'
          required: false
          example: ''
          schema:
            type: string
        - name: algo_type
          in: query
          description: 'Supported types are `STOP`, `TPSL`, `positional_TPSL`'
          required: false
          example: ''
          schema:
            type: string
        - name: is_triggered
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoOrdersResponse'

  /v1/algo/order/{order_id}:
    get:
      summary: Get Algo Order by order_id
      deprecated: false
      description: |-
        **Limit: 10 requests per 1 second**

        `GET /v1/algo/order/{order_id}`

        Get details of a single algo order by order_id.
      tags:
        - private
      parameters:
        - name: order_id
          in: path
          description: id of the order
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoOrderResponse'
  /v1/algo/client/order/{client_order_id}:
    get:
      summary: Get Algo Order by client_order_id
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/algo/client/order/{client_order_id}`

        Get details of a single algo order by `client_order_id`.
      tags:
        - private
      parameters:
        - name: client_order_id
          in: path
          description: client_order_id of the order
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoClientOrderResponse'
  /v1/algo/order/{order_id}/trades:
    get:
      summary: Get All Trades of Specific Algo Order
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second**

        `GET /v1/algo/order/{order_id}/trades`

        Get specific trades of an algo order by `order_id`.
      tags:
        - private
      parameters:
        - name: order_id
          in: path
          description: ''
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoOrderTradesResponse'
  /v1/public/account:
    get:
      summary: Check if Account Exists
      deprecated: false
      description: |-
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/account`

        Check if provided account account is registered with Orderly Network and it's respecitive builder.
      tags:
        - public
      parameters:
        - name: account_id
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountDetailsResponse'
  /v1/volume/broker/daily:
    get:
      summary: Get Builder's Users' Volumes
      deprecated: false
      description: >
        **Limit 10 requests per 60 seconds**


        `GET /v1/volume/broker/daily`


        Get the daily historical breakdown of the user trading volume on
        specified builder.


        The provided `start_date`/`end_date` has to be within a 90-day range.
        
        Updated hourly
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: Format YYYY-MM-DD
          required: true
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: Format YYYY-MM-DD
          required: true
          example: ''
          schema:
            type: string
        - name: page
          in: query
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          required: false
          example: ''
          schema:
            type: number
        - name: address
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: order_tag
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: aggregateBy
          in: query
          description: "Either by `DATE` or by `ACCOUNT`"
          required: false
          example: ''
          schema:
            type: string
        - name: sort
          in: query
          description: "Allow sort by

          `ascending_broker_fee`
          `descending_broker_fee`
          `ascending_perp_maker_volume`
          `descending_perp_maker_volume`
          `ascending_perp_taker_volume`
          `descending_perp_taker_volume`
          `ascending_perp_volume`
          `descending_perp_volume`
          `ascending_total_fee`
          `descending_total_fee`"
          required: false
          schema:
            type: string
        - name: orderly-timestamp
          in: header
          description: ''
          required: true
          example: '1649920583000'
          schema:
            type: string
        - name: orderly-account-id
          in: header
          description: ''
          required: true
          example: '0x0f29bfb4c1bc9fea3f3be46bab6d795e22a6272354b136fde05f6b80cfcad546'
          schema:
            type: string
        - name: orderly-key
          in: header
          description: ''
          required: true
          example: ed25519:8tm7dnKYkSc3FzgPuJaw1wztr79eeZpN35nHW5pL5XhX
          schema:
            type: string
        - name: orderly-signature
          in: header
          description: ''
          required: true
          example: >-
            dG4bkKiqG0dUYLzViRZkvbI6Sy239JxAdNMIBxFZ4w030Jofr0ORV06GHtvXZkaZaWUXE+XAU3fnzKN/5fDeBQ==
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBrokerDailyResponse'
  /v1/client/statistics/daily:
    get:
      summary: Get User Daily Statistics
      deprecated: false
      description: |
        **Limit 10 requests per 60 seconds**

        `GET /v1/client/statistics/daily`

        Get user daily statistics of assets/pnl/volume.
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: Format YYYY-MM-DD
          required: true
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: Format YYYY-MM-DD
          required: true
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: number
        - name: orderly-timestamp
          in: header
          description: ''
          required: true
          example: '1649920583000'
          schema:
            type: string
        - name: orderly-account-id
          in: header
          description: ''
          required: true
          example: '0x0f29bfb4c1bc9fea3f3be46bab6d795e22a6272354b136fde05f6b80cfcad546'
          schema:
            type: string
        - name: orderly-key
          in: header
          description: ''
          required: true
          example: ed25519:8tm7dnKYkSc3FzgPuJaw1wztr79eeZpN35nHW5pL5XhX
          schema:
            type: string
        - name: orderly-signature
          in: header
          description: ''
          required: true
          example: >-
            dG4bkKiqG0dUYLzViRZkvbI6Sy239JxAdNMIBxFZ4w030Jofr0ORV06GHtvXZkaZaWUXE+XAU3fnzKN/5fDeBQ==
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDailyStatsResponse'
  /v1/broker/user_info:
    get:
      summary: Get User Fee Rates
      deprecated: false
      description: |     
        **Limit 60 requests per 60 seconds**

        `GET /v1/broker/user_info`
        
        Scope: Only each builder_id's admin wallet can call this endpoint.
        
        If `account_id` or `address` is provided, will always return the fee rate and indicate whether the user is on the builder’s default fee rate or not.
      tags:
        - private
      parameters:
        - name: account_id
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: address
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - name: size
          in: query
          description: ''
          required: false
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeeRatesResponse'

  /v1/broker/fee_rate/set:
    post:
      summary: Update User Fee Rate
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/broker/fee_rate/set`
        
        Send a list of accounts assigned to a new fee rate. Max 500 accounts per request.
        
        Scope: Only each builder_id's admin wallet can call this endpoint.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maker_fee_rate:
                  type: number
                  description: "Maker fee charged to users by default (0.0001 = 0.01%)"
                taker_fee_rate:
                  type: number
                  description: "Taker fee charged to users by default (0.0001 = 0.01%)"
                account_ids:
                  type: array
                  items:
                    type: string
                  description: "List of account_ids for which the fees need to be changed"
              required:
                - maker_fee_rate
                - taker_fee_rate
                - account_ids
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

  /v1/broker/fee_rate/set_default:
    post:
      summary: Reset User Fee Rate
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/broker/fee_rate/set_default`
        
        Assign users to a default fee rate. Only send accounts that need to be updated. Max 500 accounts per request.
        
        Scope: Only each builder’s admin can create the referral code for accounts that are related to the builder_id
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_ids:
                  type: array
                  items:
                    type: string
                  description: "List of account_ids for which the fees need to be changed"
              required:
                - account_ids
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

  /v1/broker/fee_rate/default:
    post:
      summary: Update Default Builder Fee
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/broker/fee_rate/default`
        
        Update the default fee rate for users assigned to a default fee rate.
        
        Scope: Only each builder_id’s admin wallet can call this endpoint
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maker_fee_rate:
                  type: number
                  description: "Maker fee charged to users by default (0.0001 = 0.01%)"
                taker_fee_rate:
                  type: number
                  description: "Taker fee charged to users by default (0.0001 = 0.01%)"
              required:
                - maker_fee_rate
                - taker_fee_rate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
    get:
      summary: Get Default Builder Fee
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `GET /v1/broker/fee_rate/default`
        
        Get default fee rate.
        
        Scope: Only each builder_id’s admin wallet can call this endpoint
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultBrokerFeesResponse'

  /v1/referral/create:
    post:
      summary: Create Referral Code
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/referral/create`
        
        Scope: Only each builder’s admin can create the referral code for accounts that are related to the builder_id
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_id:
                  type: string
                  description: the account id of the referrer
                referral_code:
                  type: string
                  description: the referral code that admin wants to create
                max_rebate_rate:
                  type: number
                  description: the referral code’s rebate rate (max 1)
                referrer_rebate_rate:
                  type: number
                  description: rebate rate of referrer
                referee_rebate_rate:
                  type: number
                  description: rebate rate of referee
              required:
                - account_id
                - referral_code
                - max_rebate_rate
                - referrer_rebate_rate
                - referee_rebate_rate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

  /v1/referral/admin_info:
    get:
      summary: Get Referral Code Info
      deprecated: false
      description: |
        **Limit: 10 requests per second**

        `GET /v1/referral/admin_info`
        
        Scope: Only each builder’s admin wallet can call this endpoint.
      tags:
        - private
      parameters:
        - name: page
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: size
          in: query
          description: "Only one of `user_address` and `account_id` can be provided"
          required: false
          example: ''
          schema:
            type: string
        - name: user_address
          in: query
          description: ""
          required: false
          example: ""
          schema:
            type: string
        - name: account_id
          in: query
          description: "Only one of `user_address` and `account_id` can be provided"
          required: false
          example: ""
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferralCodeResponse'

  /v1/public/referral/check_ref_code:
    get:
      summary: Check Referral Code
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**
        
        
        `GET /v1/public/referral/check_ref_code`
      tags:
        - public
      parameters:
        - name: account_id
          in: query
          description: ""
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckReferralCodeResponse'

  /v1/public/referral/verify_ref_code:
    get:
      summary: Verify Referral Code
      deprecated: false
      description: |
        **Limit: 10 requests per second**
        
        
        `GET /v1/public/referral/verify_ref_code`
      tags:
        - public
      parameters:
        - name: referral_code
          in: query
          description: ""
          required: true
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyReferralCodeResponse'

  /v1/referral/update:
    post:
      summary: Update Referral Code
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/referral/update`
        
        Scope: Only each Builder’s admin wallet can call this endpoint.
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_id:
                  type: string
                  description: the account id of the referrer
                referral_code:
                  type: string
                  description: the referral code that admin wants to create
                max_rebate_rate:
                  type: number
                  description: the referral code’s rebate rate (max 1)
                referrer_rebate_rate:
                  type: number
                  description: rebate rate of referrer
                referee_rebate_rate:
                  type: number
                  description: rebate rate of referee
              required:
                - account_id
                - referral_code
                - max_rebate_rate
                - referrer_rebate_rate
                - referee_rebate_rate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

  /v1/referral/bind:
    post:
      summary: Bind Referral Code
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/referral/bind`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referral_code:
                  type: string
                  description: the referral code that admin wants to bind
              required:
                - referral_code
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

  /v1/referral/info:
    get:
      summary: Get Referral Info
      deprecated: false
      description: |
        **Limit: 10 requests per second**

        `GET /v1/referral/info`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferralInfoResponse'

  /v1/referral/referral_history:
    get:
      summary: Get Referral History
      deprecated: false
      description: |
        **Limit: 10 requests per second**

        `GET /v1/referral/referral_history`
        
        Provides a detailed history of referral rebates paid to the user.
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: "start date range that you wish to query, in the format ‘YYYY-MM-DD’"
          required: false
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: "end date range that you wish to query, in the format ‘YYYY-MM-DD’"
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: "the page you wish to query"
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: "the page size you wish to query (max: 500)"
          required: false
          example: ''
          schema:
            type: integer
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferralHistoryResponse'

  /v1/referral/rebate_summary:
    get:
      summary: Get Referral Rebate Summary
      deprecated: false
      description: |
        **Limit: 10 requests per second**

        `GET /v1/referral/rebate_summary`
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRebateSummaryResponse'

  /v1/referral/referee_history:
    get:
      summary: Get Referee History
      deprecated: false
      description: |
        **Limit: 10 requests per second**

        `GET /v1/referral/referee_history`
        
        Provides a summary of all referee activity for the requesting user.
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: "start date range that you wish to query, in the format ‘YYYY-MM-DD’"
          required: false
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: "end date range that you wish to query, in the format ‘YYYY-MM-DD’"
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: "the page you wish to query"
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: "the page size you wish to query (max: 500)"
          required: false
          example: ''
          schema:
            type: integer
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefereeHistoryResponse'

  /v1/referral/referee_info:
    get:
      summary: Get Referee Info
      deprecated: false
      description: |
        **Limit: 10 requests per second**


        `GET /v1/referral/referee_info`
      tags:
        - private
      parameters:
        - name: page
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: sort
          in: query
          description: "
          `ascending_code_binding_time`
          `descending_code_binding_time`
          `ascending_referral_rebate`
          `descending_referral_rebate`
          `ascending_volume`
          `descending_volume`
          "
          example: "ascending_volume"
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefereeInfoResponse'
 
  /v1/referral/referee_rebate_summary:
    get:
      summary: Get Referee Rebate Summary
      deprecated: false
      description: |
        **Limit: 10 requests per second**
        
        
        `GET /v1/referral/referee_rebate_summary`
        
        
        Provides daily statistics on referee rebates
      tags:
        - private
      parameters:
        - name: start_date
          in: query
          description: "start date range that you wish to query, in the format ‘YYYY-MM-DD’"
          required: true
          example: ''
          schema:
            type: string
        - name: end_date
          in: query
          description: "end date range that you wish to query, in the format ‘YYYY-MM-DD’"
          required: true
          example: ''
          schema:
            type: string
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefereeRebateSummaryResponse'

  /v1/referral/edit_split:
    post:
      summary: Edit Referral Code Split
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/referral/edit_split`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referral_code:
                  type: string
                  description: the referral code that admin wants to create
                referrer_rebate_rate:
                  type: number
                  description: the rebate rate of referrer
                referee_rebate_rate:
                  type: number
                  description: the rebate rate of referee
              required:
                - referral_code
                - referrer_rebate_rate
                - referee_rebate_rate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'

  /v1/public/points/leaderboard:
    get:
      summary: Get Points Leaderboard
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/points/leaderboard`
      tags:
        - public
      parameters:
        - name: start_r
          in: query
          description: "Starting rank you wish to query"
          required: false
          example: ''
          schema:
            type: integer
        - name: end_r
          in: query
          description: "Ending rank you wish to query"
          required: false
          example: ''
          schema:
            type: integer
        - name: epoch_id
          in: query
          description: "the epoch for which you want to check the leaderboard"
          required: false
          example: ''
          schema:
            type: integer
        - name: page
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPointsLeaderboardResponse'

  /v1/client/points:
    get:
      summary: Get User's Points
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per user**

        `GET /v1/client/points`
      tags:
        - public
      parameters:
        - name: address
          in: query
          description: ""
          required: true
          example: 'sample_address'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPointsResponse'

  /v1/public/points/epoch_dates:
    get:
      summary: Get Start and End Date of All Epochs
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per user**

        `GET /v1/public/points/epoch_dates`
        
        Retrieve the dates of all epochs
      tags:
        - public
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEpochDatesResponse'


  /v1/public/points/epoch:
    get:
      summary: Get Number of Points for Distribution
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per user per IP address**

        `GET /v1/public/points/epoch`
        
        Retrieve the number of points for past epochs and current epoch
      tags:
        - public
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEpochPointsResponse'

  /v1/delegate_signer:
    post:
      summary: Delegate Signer
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/delegate_signer`
      tags:
        - public
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateSignerBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegateSignerResponse'

  /v1/delegate_orderly_key:
    post:
      summary: Add Delegate Signer Orderly Key
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/delegate_orderly_key`
      tags:
        - public
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateOrderlyKeyBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderlyKeyResponse'

  /v1/delegate_withdraw_request:
    post:
      summary: Delegate Signer Withdraw Request
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/delegate_withdraw_request`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateWithdrawRequestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawResponse'

  /v1/delegate_settle_pnl:
    post:
      summary: Delegate Signer Settle PnL
      deprecated: false
      description: |
        **Limit: 1 requests per second**

        `POST /v1/delegate_settle_pnl`
      tags:
        - private
      parameters:
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegateSettlePnlBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlePnlResponse'

  /v1/client/distribution_history:
    get:
      summary: Get Distribution History
      deprecated: false
      description: |
        **Limit: 10 requests per second**

        `GET /v1/client/distribution_history`
      tags:
        - private
      parameters:
        - name: status
          in: query
          example: 'true'
          description: "One of `CREATED`/`SPLIT`/`COMPLETED`"
          schema:
            type: string
        - name: type
          in: query
          example: 'true'
          description: "One of `BROKER_FEE`/`REFEREE_REBATE`/`REFERRER_REBATE`"
          schema:
            type: string
        - name: start_t
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: end_t
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - $ref: '#/components/parameters/orderly_timestamp'
        - $ref: '#/components/parameters/orderly_account_id'
        - $ref: '#/components/parameters/orderly_key'
        - $ref: '#/components/parameters/orderly_signature'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDistributionHistoryResponse'

  /v1/public/campaigns:
    get:
      summary: Get List of Campaigns
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/campaigns`
      tags:
        - public
      parameters:
        - name: start_t
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: end_t
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: only_show_alive
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'

  /v1/public/campaign/stats:
    get:
      summary: Get Campaign Statistics
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/campaign/stats`
      tags:
        - public
      parameters:
        - name: campaign_id
          in: query
          description: ""
          required: true
          example: ''
          schema:
            type: integer
        - name: broker_id
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: symbol
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignStatsResponse'

  /v1/public/campaign/stats/details:
    get:
      summary: Get Detailed Campaign Info
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/campaign/stats/details`
      tags:
        - public
      parameters:
        - name: campaign_id
          in: query
          description: ""
          required: true
          example: ''
          schema:
            type: integer
        - name: broker_id
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: symbol
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: group_by
          in: query
          description: "One of `BROKER` \ `SYMBOL` \ `NONE`"
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignDetailedStatsResponse'

  /v1/public/campaign/ranking:
    get:
      summary: Get Campaign Ranking
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/campaign/ranking`
      tags:
        - public
      parameters:
        - name: campaign_id
          in: query
          description: ""
          required: true
          example: ''
          schema:
            type: integer
        - name: broker_id
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: page
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: size
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: integer
        - name: sort_by
          in: query
          description: "`volume`/`pnl`"
          required: false
          example: ''
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignRankingResponse'

  /v1/public/campaign/user:
    get:
      summary: Get Campaign User Info
      deprecated: false
      description: |
        **Limit: 10 requests per 1 second per IP address**

        `GET /v1/public/campaign/user`
      tags:
        - public
      parameters:
        - name: campaign_id
          in: query
          description: ""
          required: true
          example: ''
          schema:
            type: integer
        - name: account_id
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: address
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: broker_id
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: symbol
          in: query
          description: ""
          required: false
          example: ''
          schema:
            type: string
        - name: order_tag
          in: query
          description: ""
          required: false
          example: ""
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignUserResponse'


components:
  parameters:
    orderly_timestamp:
      name: orderly-timestamp
      in: header
      description: ""
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: "1649920583000"
    orderly_account_id:
      name: orderly-account-id
      in: header
      description: ""
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 0x0f29bfb4c1bc9fea3f3be46bab6d795e22a6272354b136fde05f6b80cfcad546
    orderly_key:
      name: orderly-key
      in: header
      description: ""
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: ed25519:8tm7dnKYkSc3FzgPuJaw1wztr79eeZpN35nHW5pL5XhX
    orderly_signature:
      name: orderly-signature
      in: header
      description: ""
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: dG4bkKiqG0dUYLzViRZkvbI6Sy239JxAdNMIBxFZ4w030Jofr0ORV06GHtvXZkaZaWUXE+XAU3fnzKN/5fDeBQ==
    recv_window_header:
      name: x-recv-window
      in: header
      description: "Use this parameter to control the timeout threshold for placing order, unit in miliseconds"
      required: false
      schema:
        type: number
      example: 20
  schemas:
    BasicResponse:
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
          example: true
        timestamp:
          type: integer
          example: 1702989203989

    EmptyDataResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              properties: {}

    PaginationMeta:
      required:
      - current_page
      - records_per_page
      - total
      type: object
      properties:
        total:
          type: integer
          example: 9
        records_per_page:
          type: integer
          example: 25
        current_page:
          type: integer
          example: 1

    FuturesInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/FutureInfo'

    FutureInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/FutureInfo'

    FutureInfo:
      type: object
      required:
      - 24h_amount
      - 24h_close
      - 24h_high
      - 24h_low
      - 24h_open
      - 24h_volume
      - est_funding_rate
      - index_price
      - last_funding_rate
      - mark_price
      - next_funding_time
      - open_interest
      - sum_unitary_funding
      - symbol
      properties:
        symbol:
          type: string
          example: "PERP_ETH_USDC"
        index_price:
          type: number
          example: 1901.6
        mark_price:
          type: integer
          example: 1950
        sum_unitary_funding:
          type: number
          example: 387.891
        est_funding_rate:
          type: number
          example: 4.6875E-4
        last_funding_rate:
          type: number
          example: 4.6875E-4
        next_funding_time:
          type: integer
          example: 1683270060000
        open_interest:
          type: string
          example: "None"
        24h_open:
          type: integer
          example: 2115
        24h_close:
          type: integer
          example: 2115
        24h_high:
          type: integer
          example: 2115
        24h_low:
          type: integer
          example: 2115
        24h_amount:
          type: integer
          example: 0
        24h_volume:
          type: integer
          example: 0

    FuturesFeeProgramResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    required:
                      - maker_fee
                      - taker_fee
                      - tier
                      - volume_max
                      - volume_min
                    properties:
                      tier:
                        type: string
                        example: "1"
                      maker_fee:
                        type: string
                        example: "0.1%"
                      taker_fee:
                        type: string
                        example: "0.1%"
                      volume_min:
                        type: integer
                        description: minimum 30-day volume (in USDC) required for eligibility of this tier
                        example: 100
                      volume_max:
                        type: integer
                        example: 500000

    FeeProgramResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - maker_fee
                    - taker_fee
                    - tier
                    - volume_min
                    properties:
                      tier:
                        type: string
                        example: "1"
                      maker_fee:
                        type: string
                        example: "0.1%"
                      taker_fee:
                        type: string
                        example: "0.1%"
                      volume_min:
                        type: integer
                        description: minimum 30-day volume (in USDC) required for eligibility of this tier
                        example: 100
                      volume_max:
                        type: integer
                        example: 500000

    MarketTradesResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - symbol
                    - side
                    - executed_price
                    - executed_quantity
                    - executed_timestamp
                    properties:
                      symbol:
                        type: string
                        example: "PERP_ETH_USDC"
                      side:
                        type: string
                        example: "BUY"
                      executed_price:
                        type: number
                        example: 2050
                      executed_quantity:
                        type: number
                        example: 1
                      executed_timestamp:
                        type: number
                        example: 1683878609166

    VolumeStatsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              properties:
                perp_volume_ytd:
                  type: number
                  example: 274148.0364
                perp_volume_ltd:
                  type: number
                  example: 274148.0364
                perp_volume_last_7_days:
                  type: number
                  example: 120272.7674
                perp_volume_last_30_days:
                  type: number
                  example: 300730.5454

    BrokerListResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - broker_id
                    - broker_name
                    properties:
                      broker_id:
                        type: string
                        example: "woofi_pro"
                      broker_name:
                        type: string
                        example: "WOOFi Pro"

    FundingRatesResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/FundingRate'

    FundingRateResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/FundingRate'

    FundingRate:
      required:
      - est_funding_rate
      - est_funding_rate_timestamp
      - last_funding_rate
      - last_funding_rate_timestamp
      - next_funding_time
      - sum_unitary_funding
      - symbol
      type: object
      properties:
        symbol:
          type: string
          example: "PERP_ETH_USDC"
        est_funding_rate:
          type: integer
          example: 0
        est_funding_rate_timestamp:
          type: integer
          example: 1683880020000
        last_funding_rate:
          type: number
          example: 1.0E-4
        last_funding_rate_timestamp:
          type: integer
          example: 1683878400000
        next_funding_time:
          type: integer
          example: 1683907200000
        sum_unitary_funding:
          type: number
          example: 521.367

    FundingRateHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - funding_rate
                    - funding_rate_timestamp
                    - next_funding_time
                    - symbol
                    properties:
                      symbol:
                        type: string
                        example: "PERP_ETH_USDC"
                      funding_rate:
                        type: number
                        example: 1.0E-4
                      funding_rate_timestamp:
                        type: integer
                        example: 1684224000000
                      next_funding_time:
                        type: integer
                        example: 1684252800000
                meta:
                  $ref: '#/components/schemas/PaginationMeta'

    LiquidationResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      timestamp:
                        type: integer
                        example: 1685298157704
                      type:
                        type: string
                        example: "liquidated"
                      liquidation_id:
                        type: integer
                        example: 1730
                      positions_by_perp:
                        type: array
                        items:
                          # TODO different from PerpPosition?
                          type: object
                          properties:
                            symbol:
                              type: string
                              example: "PERP_BTC_USDC"
                            position_qty:
                              type: number
                              example: -0.22457
                            liquidator_fee:
                              type: number
                              example: 0.015

    LiquidatedPositionsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    required:
                    - timestamp
                    - liquidation_id
                    - transfer_amount_to_insurance_fund
                    - positions_by_perp
                    type: object
                    properties:
                      timestamp:
                        type: integer
                        example: 1683802462092
                      liquidation_id:
                        type: integer
                        example: 29
                      transfer_amount_to_insurance_fund:
                        type: integer
                        example: 0
                      type:
                        type: string
                        example: "liquidated"
                      positions_by_perp:
                        type: array
                        items:
                          # TODO different from PerpPosition?
                          type: object
                          required:
                          - abs_insurance_fund_fee
                          - abs_liquidation_fee
                          - cost_position_transfer
                          - insurance_fund_fee
                          - liquidator_fee
                          - position_qty
                          - symbol
                          - transfer_price
                          properties:
                            symbol:
                              type: string
                              example: "PERP_ETH_USDC"
                            position_qty:
                              type: integer
                              example: 0
                            liquidator_fee:
                              type: number
                              example: 0.015
                            cost_position_transfer:
                              type: integer
                              example: 0
                            transfer_price:
                              type: integer
                              example: 1860
                            insurance_fund_fee:
                              type: number
                              example: 0.011999
                            abs_insurance_fund_fee:
                              type: integer
                              example: 0
                            abs_liquidator_fee:
                              type: integer
                              example: 0

    ExchangeInformationResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/Symbol'

    TokenInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      # TODO example
                      token:
                        type: string
                        description: name of token
                        example: USDC
                      decimals:
                        type: number
                        description: precision of the token
                        example: 6
                      minimum_withdraw_amount:
                        type: number
                        description: ""
                        example: 0.000001
                      token_hash:
                        type: string
                        example: "0xd6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa"
                      chain_details:
                        type: array
                        items:
                          type: object
                          properties:
                            chain_id:
                              type: integer
                              example: 43113
                            contract_address:
                              type: string
                              example: "0x5d64c9cfb0197775b4b3ad9be4d3c7976e0d8dc3"
                            cross_chain_withdrawal_fee:
                              type: integer
                              example: 0
                            decimals:
                              type: integer
                              example: 6
                            withdraw_fee:
                              type: number
                              example: 2
                            display_name:
                              type: string
                              description: "`USDC.e` for `Mantle` chain"
                              example: "USDC"

    AvailableSymbolsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Symbol'

    Symbol:
      type: object
      required:
      - base_imr
      - base_max
      - base_min
      - base_mmr
      - base_tick
      - cap_funding
      - claim_insurance_fund_discount
      - created_time
      - floor_funding
      - funding_period
      - interest_rate
      - liquidator_fee
      - min_notional
      - price_range
      - price_scope
      - quote_max
      - quote_min
      - quote_tick
      - std_liquidation_fee
      - symbol
      - updated_time
      properties:
        symbol:
          type: string
          example: "PERP_BTC_USDC"
        quote_min:
          type: integer
          example: 0
        quote_max:
          type: integer
          example: 100000
        quote_tick:
          type: number
          example: 0.1
        base_min:
          type: number
          example: 1.0E-5
        base_max:
          type: integer
          example: 20
        base_tick:
          type: number
          example: 1.0E-5
        min_notional:
          type: integer
          example: 1
        price_range:
          type: number
          example: 0.02
        price_scope:
          type: number
          example: 0.4
        std_liquidation_fee:
          type: number
          example: 0.03
        liquidator_fee:
          type: number
          example: 0.015
        claim_insurance_fund_discount:
          type: number
          example: 0.0075
        funding_period:
          type: integer
          example: 8
        cap_funding:
          type: number
          example: 3.75E-4
        floor_funding:
          type: number
          example: -3.75E-4
        interest_rate:
          type: number
          example: 1.0E-4
        created_time:
          type: integer
          example: 1684140107326
        updated_time:
          type: integer
          example: 1685345968053
        base_mmr:
          type: number
          example: 0.05
        base_imr:
          type: number
          example: 0.1
        liquidation_tier:
          type: string
          example: "1"

    InsuranceFundResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - balance
              - free_collateral
              - margin_ratio
              - min_insurance_fund_initial_margin_ratio
              - min_insurance_fund_margin_ratio
              - rows
              - total_account_value
              - total_collateral_value
              - total_pnl_24_h
              properties:
                min_insurance_fund_initial_margin_ratio:
                  type: number
                  example: 0.3
                min_insurance_fund_margin_ratio:
                  type: number
                  example: 0.25
                margin_ratio:
                  type: integer
                  example: 10
                total_collateral_value:
                  type: number
                  example: 1.0008662996861E7
                balance:
                  type: number
                  example: 1.0001908678983E7
                free_collateral:
                  type: number
                  example: 1.0008662996861E7
                total_account_value:
                  type: number
                  example: 1.0008662996861E7
                total_pnl_24_h:
                  type: integer
                  example: 0
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - symbol
                    - timestamp
                    - position_qty
                    - cost_position
                    - last_sum_unitary_funding
                    - settle_price
                    - average_open_price
                    - pnl_24_h
                    - fee_24_h
                    - mark_price
                    properties:
                      symbol:
                        type: string
                        example: "PERP_BTC_USDC"
                      timestamp:
                        type: integer
                        example: 1685262631606
                      position_qty:
                        type: integer
                        example: 0
                      cost_position:
                        type: number
                        example: -617.672835
                      last_sum_unitary_funding:
                        type: number
                        example: 100.56
                      settle_price:
                        type: integer
                        example: 0
                      average_open_price:
                        type: integer
                        example: 0
                      pnl_24_h:
                        type: integer
                        example: 0
                      fee_24_h:
                        type: integer
                        example: 0
                      mark_price:
                        type: number
                        example: 27821.8

    TvConfigResponse:
      type: object
      required:
      - d
      - s
      properties:
        s:
          type: string
        d:
          type: object
          required:
          - accountManager
          - accountSummaryRow
          - durations
          - orderCustomFields
          - orderHistoryCustomFields
          - positionCustomFields
          - pullingInterval
          properties:
            accountSummaryRow:
              type: array
              items:
                $ref: '#/components/schemas/AccountSummary'
            accountManager:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  columns:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccountSummary'
            durations:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  hasDatePicker:
                    type: boolean
                  hasTimePicker:
                    type: boolean
                  default:
                    type: boolean
                  supportedOrderTypes:
                    type: array
                    items:
                      type: string
            orderCustomFields:
              type: array
              items:
                $ref: '#/components/schemas/OrderCustomField'
            orderHistoryCustomFields:
              type: array
              items:
                $ref: '#/components/schemas/OrderCustomField'
            positionCustomFields:
              type: array
              items:
                type: object
                required:
                - alignment
                - id
                - title
                - tooltip
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  tooltip:
                    type: string
                  alignment:
                    type: string
            pullingInterval:
              type: object
              required:
              - accountManager
              - balances
              - orders
              - positions
              - quotes
              properties:
                quotes:
                  type: integer
                orders:
                  type: integer
                positions:
                  type: integer
                accountManager:
                  type: integer
                balances:
                  type: integer

    AccountSummary:
      type: object
      required:
      - id
      - title
      properties:
        id:
          type: string
        title:
          type: string

    OrderCustomField:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        tooltip:
          type: string
        alignment:
          type: string

    TvHistoryResponse:
      type: object
      required:
      - c
      - h
      - l
      - o
      - s
      - t
      - v
      properties:
        s:
          type: string
        t:
          type: array
          items:
            type: integer
        o:
          type: array
          items:
            oneOf:
            - type: integer
            - type: number
        h:
          type: array
          items:
            type: number
        l:
          type: array
          items:
            type: number
        c:
          type: array
          items:
            type: number
        v:
          type: array
          items:
            type: number

    TvSymbolResponse:
      type: object
      required:
      - bar-fillgaps
      - bar-source
      - bar-transform
      - base-currency
      - currency
      - description
      - exchange-listed
      - exchange-traded
      - expiration
      - fractional
      - has-daily
      - has-intraday
      - has-no-volume
      - has-weekly-and-monthly
      - intraday-multipliers
      - is-cfd
      - isin
      - minmovement
      - minmovement2
      - pointvalue
      - pricescale
      - root
      - root-description
      - s
      - session-extended
      - session-postmarket
      - session-premarket
      - session-regular
      - supported-resolutions
      - symbol
      - ticker
      - timezone
      - type
      - wkn
      properties:
        s:
          type: string
        symbol:
          type: array
          items:
            type: string
        description:
          type: array
          items:
            type: string
        currency:
          type: array
          items:
            type: string
        base-currency:
          type: array
          items:
            oneOf:
            - type: string
        exchange-listed:
          type: array
          items:
            type: string
        exchange-traded:
          type: array
          items:
            type: string
        minmovement:
          type: array
          items:
            type: integer
        minmovement2:
          type: array
          items:
            type: integer
        fractional:
          type: array
          items:
            type: boolean
        pricescale:
          type: array
          items:
            type: integer
        root:
          type: array
          items:
            oneOf:
            - type: string
        root-description:
          type: array
          items:
            oneOf:
            - type: string
        has-intraday:
          type: array
          items:
            type: boolean
        has-no-volume:
          type: array
          items:
            type: boolean
        type:
          type: array
          items:
            type: string
        is-cfd:
          type: array
          items:
            type: boolean
        ticker:
          type: array
          items:
            type: string
        timezone:
          type: array
          items:
            type: string
        session-regular:
          type: array
          items:
            type: string
        session-extended:
          type: array
          items:
            type: string
        session-premarket:
          type: array
          items:
            oneOf:
            - type: string
        session-postmarket:
          type: array
          items:
            oneOf:
            - type: string
        supported-resolutions:
          type: array
          items:
            type: array
            items:
              type: string
        has-daily:
          type: array
          items:
            type: boolean
        intraday-multipliers:
          type: array
          items:
            type: array
            items:
              type: string
        has-weekly-and-monthly:
          type: array
          items:
            type: boolean
        pointvalue:
          type: array
          items:
            oneOf:
            - type: integer
            - type: number
        expiration:
          type: array
          items:
            oneOf:
            - type: integer
        bar-source:
          type: array
          items:
            type: string
        bar-transform:
          type: array
          items:
            type: string
        bar-fillgaps:
          type: array
          items:
            type: string
        isin:
          type: array
          items:
            type: string
        wkn:
          type: array
          items:
            type: string

    PositionsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - current_margin_ratio_with_orders
              - free_collateral
              - initial_margin_ratio
              - initial_margin_ratio_with_orders
              - maintenance_margin_ratio
              - maintenance_margin_ratio_with_orders
              - margin_ratio
              - open_margin_ratio
              - total_collateral_value
              - total_pnl_24_h
              - rows
              properties:
                current_margin_ratio_with_orders:
                  type: number
                  example: 1.2385
                free_collateral:
                  type: number
                  example: 450315.09115
                initial_margin_ratio:
                  type: number
                  example: 0.1
                initial_margin_ratio_with_orders:
                  type: number
                  example: 0.1
                maintenance_margin_ratio:
                  type: number
                  example: 0.05
                maintenance_margin_ratio_with_orders:
                  type: number
                  example: 0.05
                margin_ratio:
                  type: number
                  example: 1.2385
                open_margin_ratio:
                  type: number
                  example: 1.2102
                total_collateral_value:
                  type: number
                  example: 489865.71329
                total_pnl_24_h:
                  type: number
                  example: 0
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Position'

    PositionResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/Position'

    Position:
      type: object
      properties:
        IMR_withdraw_orders:
          type: number
          example: 0.1
        MMR_with_orders:
          type: number
          example: 0.05
        average_open_price:
          type: number
          example: 27908.14386047
        cost_position:
          type: number
          example: -139329.358492
        est_liq_price:
          type: number
          example: 117335.92899428
        fee_24_h:
          type: number
          example: 0
        imr:
          type: number
          example: 0.1
        last_sum_unitary_funding:
          type: number
          example: 70.38
        mark_price:
          type: number
          example: 27794.9
        mmr:
          type: number
          example: 0.05
        pending_long_qty:
          type: number
          example: 0
        pending_short_qty:
          type: number
          example: 0
        pnl_24_h:
          type: number
          example: 0
        position_qty:
          type: number
          example: -5
        settle_price:
          type: number
          example: 27865.8716984
        symbol:
          type: string
          example: "PERP_BTC_USDC"
        timestamp:
          type: number
          example: 1685429350571
        unsettled_pnl:
          type: number
          example: 354.858492

    FundingFeeHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      symbol:
                        type: string
                        example: "PERP_ETH_USDC"
                      funding_rate:
                        type: number
                        example: 4.6875E-4
                      mark_price:
                        type: number
                        example: 2100
                      funding_fee:
                        type: number
                        example: 1.6E-5
                      payment_type:
                        type: string
                        example: "Pay"
                        description: "`Receive`/`Pay`"
                      status:
                        type: string
                        example: "Accrued"
                        description: "`Accrued`/`Settled`"
                      created_time:
                        type: number
                        example: 1682235722003
                      updated_time:
                        type: number
                        example: 1682235722003

    LiquidatorLiquidationsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      liquidation_id:
                        type: integer
                        example: 1728
                      timestamp:
                        type: number
                        example: 1685154032762
                      type:
                        type: string
                        example: "liquidated"
                      positions_by_perp:
                        type: array
                        items:
                          $ref: '#/components/schemas/PerpPosition'

    PerpPosition:
      type: object
      properties:
        abs_liquidator_fee:
          type: number
          example: 1.152279
        cost_position_transfer:
          type: number
          example: 65.84448
        liquidator_fee:
          type: number
          example: 0.0175
        position_qty:
          type: number
          example: 41.6
        symbol:
          type: string
          example: "PERP_NEAR_USDC"
        transfer_price:
          type: number
          example: 1.5828

    ClientLeverageBody:
      type: object
      required:
      - leverage
      properties:
        leverage:
          type: integer
          # TODO min/max?

    LiquidationsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      liquidation_id:
                        type: number
                        example: 101
                      timestamp:
                        type: number
                        example: 1663313562090
                      transfer_amount_to_insurance_fund:
                        type: number
                        example: 0
                      positions_by_perp:
                        type: array
                        items:
                          $ref: '#/components/schemas/PerpPosition'

    LiquidationBody:
      required:
      - limit_price
      - liquidation_id
      - ratio_qty_request
      type: object
      properties:
        liquidation_id:
          type: integer
        ratio_qty_request:
          type: integer
        extra_liquidation_ratio:
          type: integer
        limit_price:
          type: object
          required:
          - symbol
          description: "Liquidator’s instruction to let the system reject the liquidation claim if the following condition applies: if position_qty > 0, reject if mark_price > limit_price; if position_qty < 0, reject if mark_price < limit_price"
          properties:
            symbol:
              type: number
              description: The limit price for each symbol in the liquidation claim
        symbols:
          type: object
          required:
          - ratio_qty_request
          - symbol
          description: "For high risk tiers only"
          properties:
            ratio_qty_request:
              type: number
              description: "Field dedicated to high risk symbols liquidations type only (symbols with liquidation tier = 2), where a liquidator can specific the ratio he wish to liquidates per symbol"
            symbol:
              type: string
              description: "Only relevant if this is a liquidation of type high tier (symbols with liquidation tier = 2)"

    # TODO different from LiquidationResponse?
    PostLiquidationResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - liquidation_id
              - positions_by_perp
              - timestamp
              - type
              properties:
                liquidation_id:
                  type: integer
                timestamp:
                  type: number
                type:
                  type: string
                  description: OR "claim"
                positions_by_perp:
                  type: array
                  items:
                    $ref: '#/components/schemas/PerpPosition'

    OrderBody:
      required:
      - order_id
      - order_type
      - side
      - symbol
      type: object
      properties:
        order_id:
          type: string
        symbol:
          type: string
        client_order_id:
          type: string
        order_type:
          type: string
        order_price:
          type: number
        order_quantity:
          type: number
        order_amount:
          type: number
        reduce_only:
          type: boolean
        visible_quantity:
          type: number
        side:
          type: string
        order_tag:
          type: string

    PutOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              properties:
                status:
                  type: string
                  example: "EDIT_SENT"

    PostOrderBody:
      required:
      - order_type
      - side
      - symbol
      type: object
      properties:
        symbol:
          type: string
          example: "PERP_ETH_USDC"
        client_order_id:
          type: string
          description: "36 length, default: null"
        order_type:
          type: string
          description: "`LIMIT`/`MARKET`/`IOC`/`FOK`/`POST_ONLY`/`ASK`/`BID`"
        order_price:
          type: number
          description: "If order_type is MARKET/ASK/BID, then is not required, otherwise this parameter is required."
        order_quantity:
          type: number
          description: "For MARKET/ASK/BID order, if order_amount is given, it is not required."
        order_amount:
          type: number
          description: "For MARKET/ASK/BID order, the order size in terms of quote currency"
        visible_quantity:
          type: number
          description: "The order quantity shown on orderbook. (default: equal to order_quantity)"
        side:
          type: string
          description: "`SELL`/`BUY`"
        reduce_only:
          type: boolean
          description: Default false
        slippage:
          type: number
          description: "`MARKET` orders beyond this slippage will not be executed"
        order_tag:
          type: string
        level:
          type: number
          description: "Integer value from `0` to `4`. This parameter controls wether to present the price of bid0 to bid4 or ask0 to ask4. Only allowed when `order_type` is `BID` or `ASK`."
        post_only_adjust:
          type: boolean
          description: "If set to true, then price will be adjusted to 1 tick close to current best price. Only supported for `POST_ONLY` type orders"

    PostOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              $ref: '#/components/schemas/CreatedOrder'

    PostAlgoOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
            - data
          type: object
          properties:
            data:
              $ref: '#/components/schemas/CreatedAlgoOrder'

    CreatedOrder:
      type: object
      properties:
        order_id:
          type: number
          example: 13
        client_order_id:
          type: string
          example: "testclientid"
        order_type:
          type: string
          example: "LIMIT"
        order_price:
          type: number
          example: 100.12
        order_quantity:
          type: number
          example: 0.987654
        order_amount:
          type: number
          example: 0.8
        error_message:
          type: string
          example: "none"

    CreatedAlgoOrder:
      type: object
      required:
        - order_id
        - client_order_id
        - algo_type
        - quantity
      properties:
        order_id:
          type: number
          example: 13
        client_order_id:
          type: string
          example: "testclientid"
        algo_type:
          type: string
          example: "STOP"
        quantity:
          type: number
          example: 100.12

    DeleteOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              type: object
              required:
              - status
              properties:
                status:
                  $ref: '#/components/schemas/OrderStatus'

    DeleteAllPendingAlgoOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
            - data
          type: object
          properties:
            data:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  example: "CANCEL_ALL_SENT"

    OrderStatus:
      # TODO enum
      type: string
      example: "CANCEL_SENT"

    OrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/Order'

    Order:
      type: object
      required:
      - amount
      - average_executed_price
      - client_order_id
      - created_time
      - executed_quantity
      - total_executed_quantity
      - fee_asset
      - order_id
      - price
      - quantity
      - side
      - status
      - symbol
      - total_fee
      - type
      - updated_time
      - user_id
      - visible_quantity
      - realized_pnl
      properties:
        order_id:
          type: number
          example: 78151
        user_id:
          type: number
          example: 12345
        price:
          type: number
          example: 0.67772
        type:
          type: string
          example: "LIMIT"
        quantity:
          type: number
          example: 20
        amount:
          type: number
          example: 10
          # TODO nullable & example
          nullable: true
        executed_quantity:
          type: number
          example: 20
        total_executed_quantity:
          type: number
          example: 20
        visible_quantity:
          type: number
          example: 1
        symbol:
          type: string
          example: "PERP_WOO_USDC"
        side:
          type: string
          example: "BUY"
        status:
          type: string
          example: "FILLED"
          description: NEW / FILLED / PARTIAL_FILLED / CANCELLED
        total_fee:
          type: number
          example: 0.5
        fee_asset:
          type: string
          example: "WOO"
        client_order_id:
          type: number
          example: 1
          # TODO nullable & example
          nullable: true
        average_executed_price:
          type: number
          example: 0.67772
        created_time:
          type: number
          example: 1653563963000
        updated_time:
          type: number
          example: 1653564213000
        realized_pnl:
          type: number
          example: 0.0

    AlgoOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/AlgoOrder'
    AlgoOrder:
      type: object
      required:
        - algo_order_id
        - algo_status
        - algo_type
        - created_time
        - fee_asset
        - is_triggered
        - order_tag
        - parent_algo_order_id
        - quantity
        - root_algo_order_id
        - root_algo_order_status
        - side
        - symbol
        - total_executed_quantity
        - total_fee
        - trigger_price
        - trigger_price_type
        - type
        - updated_time
        - visible_quantity
      properties:
          algo_order_id:
            type: number
            example: 168400010
          algo_status:
            type: string
            example: "NEW"
          algo_type:
            type: string
            example: "STOP"
          fee_asset:
            type: string
            example: "USDC"
          is_triggered:
            type: string
            example: "false"
          order_tag:
            type: string
            example: "test_tag"
          parent_algo_order_id:
            type: number
            example: 0
          quantity:
            type: number
            example: 5.5
          root_algo_order_id:
            type: number
            example: 168400010
          root_algo_order_status:
            type: string
            example: "NEW"
          side:
            type: string
            example: "BUY"
          symbol:
            type: string
            example: "PERP_NEAR_USDC"
          executed_quantity:
            type: number
            example: 0
          total_executed_quantity:
            type: number
            example: 0
          total_fee:
            type: number
            example: 0
          trigger_price:
            type: number
            example: 2.5
          trigger_price_type:
            type: string
            example: "MARK_PRICE"
          type:
            type: string
            example: "MARKET"
          created_time:
            type: string
            example: 1702871974317
          updated_time:
            type: string
            example: 1702871974317
          visible_quantity:
            type: number
            example: 5.5
          realized_pnl:
            type: number
            example: 0.0
          child_orders:
            type: array
            items:
              type: object
            description: "Array of `AlgoOrder`"

    TradesResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Trade'

    Trade:
      type: object
      properties:
        id:
          type: number
          example: 2
        symbol:
          type: string
          example: "PERP_BTC_USDC"
        fee:
          type: number
          example: 1.0E-4
        fee_asset:
          type: string
          example: "USDC"
          description: "fee. use Base as unit when BUY, use Quote as unit when SELL"
        side:
          type: string
          example: "BUY"
        order_id:
          type: number
          example: 1
        executed_price:
          type: number
          example: 123
        executed_quantity:
          type: number
          example: 0.05
        executed_timestamp:
          type: number
          example: 1567382401000
        is_maker:
          type: number
          example: 1
        realized_pnl:
          type: number
          example: 0.0


    AlgoTrade:
      type: object
      properties:
        id:
          type: number
          example: 2
        symbol:
          type: string
          example: "PERP_BTC_USDC"
        fee:
          type: number
          example: 1.0E-4
        fee_asset:
          type: string
          example: "USDC"
          description: "fee. use Base as unit when BUY, use Quote as unit when SELL"
        side:
          type: string
          example: "BUY"
        order_id:
          type: number
          example: 1
        executed_price:
          type: number
          example: 123
        executed_quantity:
          type: number
          example: 0.05
        executed_timestamp:
          type: number
          example: 1567382401000
        is_maker:
          type: number
          example: 1

    ClientHoldingResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - holding
              properties:
                holding:
                  type: array
                  items:
                    type: object
                    required:
                    - frozen
                    - holding
                    - pending_short
                    - token
                    - updated_time
                    properties:
                      updated_time:
                        type: number
                        example: 1580794149000
                        description: Unix epoch time in milliseconds
                      token:
                        type: string
                        example: "BTC"
                      holding:
                        type: number
                        example: -28.000752
                      frozen:
                        type: number
                        example: 0
                      pending_short:
                        type: number
                        example: -2000

    ClientInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              type: object
              required:
              - account_id
              - account_mode
              - email
              - futures_maker_fee_rate
              - futures_taker_fee_rate
              - imr_factor
              - maintenance_cancel_orders
              - maker_fee_rate
              - max_leverage
              - taker_fee_rate
              properties:
                account_id:
                  type: string
                email:
                  type: string
                  example: "test@test.com"
                account_mode:
                  type: string
                  example: "FUTURES"
                  description: account mode
                max_leverage:
                  type: number
                  example: 20
                taker_fee_rate:
                  type: number
                  example: 0
                maker_fee_rate:
                  type: number
                  example: 0
                futures_taker_fee_rate:
                  type: number
                  example: 0
                futures_maker_fee_rate:
                  type: number
                  example: 0
                maintenance_cancel_orders:
                  type: boolean
                  example: true
                imr_factor:
                  # TODO
                  type: object
                  required:
                  - PERP_BTC_USDC
                  - PERP_ETH_USDC
                  - PERP_NEAR_USDC
                  properties:
                    PERP_BTC_USDC:
                      type: number
                    PERP_ETH_USDC:
                      type: number
                    PERP_NEAR_USDC:
                      type: number
                max_notional:
                  # TODO
                  type: object
                  required:
                    - PERP_BTC_USDC
                    - PERP_ETH_USDC
                    - PERP_NEAR_USDC
                  properties:
                    PERP_BTC_USDC:
                      type: number
                    PERP_ETH_USDC:
                      type: number
                    PERP_NEAR_USDC:
                      type: number

    OrdersResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Order'

    AlgoOrdersResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - meta
                - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/AlgoOrder'

    ClientStatisticsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - days_since_registration
              - fees_paid_last_30_days
              - perp_fees_paid_last_30_days
              - perp_trading_volume_last_24_hours
              - perp_trading_volume_last_30_days
              - perp_trading_volume_ytd
              - trading_volume_last_24_hours
              - trading_volume_last_30_days
              - trading_volume_ytd
              properties:
                days_since_registration:
                  type: integer
                  example: 109
                fees_paid_last_30_days:
                  type: number
                  example: 0
                perp_fees_paid_last_30_days:
                  type: number
                  example: 0
                perp_trading_volume_last_24_hours:
                  type: number
                  example: 0
                perp_trading_volume_last_7_days:
                  type: number
                  example: 0
                perp_trading_volume_last_30_days:
                  type: number
                  example: 0
                perp_trading_volume_ytd:
                  type: number
                  example: 0
                perp_trading_volume_ltd:
                  type: number
                  example: 0
                trading_volume_last_24_hours:
                  type: number
                  example: 0
                trading_volume_last_30_days:
                  type: number
                  example: 0
                trading_volume_ytd:
                  type: number
                  example: 459.7436

    AssetHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - id
                    - tx_id
                    - side
                    - token
                    - amount
                    - fee
                    - trans_status
                    - created_time
                    - updated_time
                    - chain_id
                    properties:
                      id:
                        type: string
                        example: "230707030600002"
                      tx_id:
                        type: string
                        example: "0x4b0714c63cc7abae72bf68e84e25860b88ca651b7d27dad1e32bf4c027fa5326"
                      side:
                        type: string
                        example: "WITHDRAW"
                      token:
                        type: string
                        example: "USDC"
                      amount:
                        type: number
                        example: 555
                      fee:
                        type: number
                        example: 0
                      trans_status:
                        type: string
                        example: "FAILED"
                      created_time:
                        type: number
                        example: 1688699193034
                      updated_time:
                        type: number
                        example: 1688699193096
                      chain_id:
                        type: string
                        example: "986532"

    ClaimInsuranceFundBody:
      type: object
      required:
      - claim_id
      - qty_request
      - symbol
      properties:
        claim_id:
          type: number
        symbol:
          type: string
        qty_request:
          type: number
          description: Quantity to be claimed from insurance fund
        limit_price:
          type: object
          description: "Liquidator’s instruction to let the system reject the liquidation claim if the following condition applies: if position_qty > 0, reject if mark_price > limit_price; if position_qty < 0, reject if mark_price < limit_price"
          required:
            - symbol
          properties:
            symbol:
              type: number
              description: "The limit price for each symbol in the liquidation claim"

    ClaimInsuranceFundResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - liquidation_id
              - positions_by_perp
              - timestamp
              properties:
                liquidation_id:
                  type: integer
                  example: 101
                timestamp:
                  type: integer
                  example: 1663313562090
                positions_by_perp:
                  type: array
                  items:
                    $ref: '#/components/schemas/PerpPosition'

    SystemInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - msg
              - status
              properties:
                status:
                  type: number
                  example: 0
                scheduled_maintenance:
                  type: object
                  properties:
                    startTime:
                      type: number
                      example: 1618822380000
                    endTime:
                      type: number
                      example: 1618822440000
                msg:
                  type: string

    RegistrationNonceResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - registration_nonce
              properties:
                registration_nonce:
                  type: string
                  example: "194528949540"

    GetAccountResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - account_id
              - user_id
              properties:
                user_id:
                  type: integer
                  example: 24
                account_id:
                  type: string
                  example: "0xb129e074a17dfba8d652ae1eca21c7d6bb6904f1aa693f4886d50db170933a46"

    GetBrokerResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                broker_id:
                  type: array
                  items:
                    type: string
                    example: "woofi_pro"


    DelegateSignerBody:
      type: object
      required:
        - message
        - signature
        - userAddress
      properties:
        message:
          type: object
          required:
            - delegateContract
            - brokerId
            - chainId
            - registrationNonce
            - timestamp
          properties:
            delegateContract:
              type: string
              example: "0xaddress"
            brokerId:
              type: string
              description: Builder ID
              example: "woofi_pro"
            chainId:
              type: integer
              example: 421613
              description: Chain ID of registering chain (within those that are supported by the Network)
            timestamp:
              type: integer
              example: 1704879369551
              description: timestamp in UNIX milliseconds
            registrationNonce:
              type: integer
              example: 161111791392
              description: Message object containing the message that is signed by the wallet owner
            txHash:
              type: string
              description: ""
              example: "0xtxhash"
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
          example: "0x8668447f28534dc1b76566e41f5fcdeb6b131355b9cf428f3fae5c134e9a0fc55642a2771860484651e61043e8ac67a1a6e54031a4c66de44acd77c9d9b281e81b"
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712
          example: "0xDd3287043493E0a08d2B348397554096728B459c"


    RegisterAccountBody:
      type: object
      required:
      - message
      - signature
      - userAddress
      properties:
        message:
          type: object
          required:
          - brokerId
          - chainId
          - registrationNonce
          - timestamp
          properties:
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            timestamp:
              type: string
              description: timestamp in UNIX milliseconds
            registrationNonce:
              type: string
          description: Message object containing the message that is signed by the wallet owner
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712

    RegisterAccountResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - account_id
              properties:
                account_id:
                  type: string

    GetOrderlyKeyResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - expiration
              - orderly_key
              - scope
              properties:
                orderly_key:
                  type: string
                  example: "ed25519:7tEoJo5hMBKBrQsqmc8yw1xNfoQCFQBVwQT1eFafRNRf"
                scope:
                  type: string
                  example: "read,trading"
                expiration:
                  type: integer
                  example: 1689086651947
                tag:
                  type: string

    DelegateOrderlyKeyBody:
      type: object
      required:
        - message
        - signature
        - userAddress
      properties:
        message:
          type: object
          required:
            - delegateContract
            - brokerId
            - chainId
            - expiration
            - orderlyKey
            - scope
            - timestamp
          properties:
            delegateContract:
              type: string
              description: ""
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            orderlyKey:
              type: string
              description: Orderly Key to be added
            scope:
              type: string
              description: Valid nonce from Get Registration Nonce
            timestamp:
              type: number
              description: timestamp in UNIX milliseconds
            expiration:
              type: number
              description: Expiration time of the key in UNIX milliseconds. Maximum allowed expiration is 365 days from add
          description: Message object containing the message that is signed by the wallet owner
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712


    OrderlyKeyBody:
      type: object
      required:
      - message
      - signature
      - userAddress
      properties:
        message:
          type: object
          required:
          - brokerId
          - chainId
          - expiration
          - orderlyKey
          - scope
          - timestamp
          properties:
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            orderlyKey:
              type: string
              description: Orderly Key to be added
            scope:
              type: string
              description: "Valid scopes are `read` and `trading`; multiple scopes can be sent by separating scopes with comma such as `read,trading`"
            timestamp:
              type: number
              description: timestamp in UNIX milliseconds
            expiration:
              type: number
              description: Expiration time of the key in UNIX milliseconds. Maximum allowed expiration is 365 days from add
          description: Message object containing the message that is signed by the wallet owner
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712
        tag:
          type: string
          description: An optional tag of string values。

    RemoveOrderlyKeyBody:
      type: object
      required:
      - orderly_key
      properties:
        orderly_key:
          type: string
          description: The Orderly key to be removed from the account   

    OrderlyKeyResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - orderly_key
              properties:
                id:
                  type: integer
                  example: 123
                orderly_key:
                  type: string
                  example: "ed25519:FRXntsPJBCy6dzKv9WPw4eYSw3rKU9Npz3T6UmvvJc9Z"

    ConfigResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - available_futures_leverage
              properties:
                available_futures_leverage:
                  type: string
                  example: "1,2,3,4,5,10,15,20"

    ChainInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    required:
                    - name
                    - public_rpc_url
                    - chain_id
                    - currency_symbol
                    - explorer_base_url
                    # TODO vault_address has been missing. Check
                    - vault_address
                    properties:
                      name:
                        type: string
                        example: "Arbitrum"
                      public_rpc_url:
                        type: string
                        example: "https://arb1.arbitrum.io/rpc"
                      chain_id:
                        type: string
                        example: "42161"
                      currency_symbol:
                        type: string
                        example: "ETH"
                      explorer_base_url:
                        type: string
                        example: https://arbiscan.io
                      vault_address:
                        type: string
                        example: "0x816f722424B49Cf1275cc86DA9840Fbd5a6167e9"
                      broker_ids:
                        type: array
                        items:
                          type: string
                          example: "woofi_dex"
#                      token_info:
#                        type: object
#                        properties:
#                          token_name:
#                            type: string
#                            example: "USDC"
#                            description: "`USDC.e` for `Mantle` chain only"
#                          contract_address:
#                            type: string
#                            example: "0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d"
#                          decimals:
#                            type: number
#                            example: 6
#                          withdrawal_fee:
#                            type: number
#                            example: 2
#                          cross_chain_withdrawal_fee:
#                            type: number
#                            example: 5

    BatchOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreatedOrder'

    OrderStatusResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/OrderStatus'

    ClientOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              $ref: '#/components/schemas/Order'

    AlgoClientOrderResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
            - data
          type: object
          properties:
            data:
              $ref: '#/components/schemas/AlgoOrder'

    OrderbookResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - asks
              - bids
              - timestamp
              properties:
                asks:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderbookEntry'
                bids:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderbookEntry'
                timestamp:
                  type: integer
                  description: Unix epoch time in milliseconds

    OrderbookEntry:
      type: object
      required:
      - price
      - quantity
      properties:
        price:
          type: number
          example: 10669.4
        quantity:
          type: number
          example: 1.56263218

    KlineResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    required:
                    - open
                    - close
                    - low
                    - high
                    - volume
                    - amount
                    - symbol
                    - type
                    - start_timestamp
                    - end_timestamp
                    type: object
                    properties:
                      open:
                        type: number
                        example: 66166.23
                      close:
                        type: number
                        example: 66124.56
                      low:
                        type: number
                        example: 66038.06
                      high:
                        type: number
                        example: 66176.97
                      volume:
                        type: number
                        example: 23.45528526
                      amount:
                        type: number
                        example: 1550436.21725288
                      symbol:
                        type: string
                        example: "PERP_BTC_USDC"
                      type:
                        type: string
                        example: "1m"
                      start_timestamp:
                        type: integer
                        example: 1636388220000
                        description: Unix epoch time in milliseconds
                      end_timestamp:
                        type: integer
                        example: 1636388280000
                        description: Unix epoch time in milliseconds

    OrderTradesResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Trade'

    AlgoOrderTradesResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
            - data
          type: object
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/AlgoTrade'

    TradeResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              $ref: '#/components/schemas/Trade'

    ClientMaintenanceConfigBody:
      type: object
      required:
      - maintenance_cancel_order_flag
      properties:
        maintenance_cancel_order_flag:
          type: boolean
          description: "if true, system will cancel all of user's pending orders during maintenance."

    ClientMaintenanceConfigResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - success_alter
              properties:
                success_alter:
                  type: string
                  example: "Success! Your change has been saved!"

    DailyVolumeResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: array
              items:
                type: object
                required:
                - date
                - perp_volume
                properties:
                  date:
                    type: string
                    example: 2024-01-01
                  perp_volume:
                    type: number
                    example: 100.24


    WithdrawNonceReponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - withdraw_nonce
              properties:
                withdraw_nonce:
                  type: integer
                  example: 1

    SettleNonceResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - settle_nonce
              properties:
                settle_nonce:
                  type: integer
                  example: 1

    WithdrawRequestBody:
      required:
      - signature
      - userAddress
      - verifyingContract
      - message
      type: object
      properties:
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712
        verifyingContract:
          type: string
          description: Address of the Orderly Network ledger contract
        message:
          type: object
          description: Message object containing the message that is signed by the wallet owner
          required:
          - brokerId
          - chainId
          - receiver
          - token
          - amount
          - withdrawNonce
          - timestamp
          properties:
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            receiver:
              type: string
              description: Chain ID of registering chain (within those that are supported by the Network)
            token:
              type: string
              description: The string representation of the token that is being withdrawn (eg "USDC")
            amount:
              type: number
              description: Amount of tokens to be withdrawn
            withdrawNonce:
              type: string
              description: Valid withdrawal nonce from Get withdrawal nonce
            timestamp:
              type: string
              description: current timestamp in UNIX milliseconds

    DelegateWithdrawRequestBody:
      required:
        - signature
        - userAddress
        - verifyingContract
        - message
      type: object
      properties:
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712
        verifyingContract:
          type: string
          description: Address of the Orderly Network ledger contract
        message:
          type: object
          description: Message object containing the message that is signed by the wallet owner
          required:
            - delegateContract
            - brokerId
            - chainId
            - receiver
            - token
            - amount
            - withdrawNonce
            - timestamp
          properties:
            delegateContract:
              type: string
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            receiver:
              type: string
              description: Chain ID of registering chain (within those that are supported by the Network)
            token:
              type: string
              description: The string representation of the token that is being withdrawn (eg "USDC")
            amount:
              type: number
              description: Amount of tokens to be withdrawn
            withdrawNonce:
              type: string
              description: Valid withdrawal nonce from Get withdrawal nonce
            timestamp:
              type: string
              description: current timestamp in UNIX milliseconds

    WithdrawResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - withdraw_id
              properties:
                withdraw_id:
                  type: integer
                  example: 123

    SettlePnlBody:
      required:
      - signature
      - userAddress
      - verifyingContract
      - message
      type: object
      properties:
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712
        verifyingContract:
          type: string
          description: Address of the Orderly Network ledger contract
        message:
          type: object
          description: Message object containing the message that is signed by the wallet owner
          required:
          - brokerId
          - chainId
          - settleNonce
          - timestamp
          properties:
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            settleNonce:
              type: integer
              description: Nonce from Get settle PnL Nonce
            timestamp:
              type: integer
              description: current timestamp in UNIX milliseconds

    DelegateSettlePnlBody:
      required:
        - signature
        - userAddress
        - verifyingContract
        - message
      type: object
      properties:
        signature:
          type: string
          description: The signature generated by signing the message object via EIP-712
        userAddress:
          type: string
          description: The address of the wallet signing the message object via EIP-712
        verifyingContract:
          type: string
          description: Address of the Orderly Network ledger contract
        message:
          type: object
          description: Message object containing the message that is signed by the wallet owner
          required:
            - delegateContract
            - brokerId
            - chainId
            - settleNonce
            - timestamp
          properties:
            delegateContract:
              type: string
            brokerId:
              type: string
              description: Builder ID
            chainId:
              type: integer
              description: Chain ID of registering chain (within those that are supported by the Network)
            settleNonce:
              type: integer
              description: Nonce from Get settle PnL Nonce
            timestamp:
              type: integer
              description: current timestamp in UNIX milliseconds

    SettlePnlResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - settle_pnl_id
              properties:
                settle_pnl_id:
                  type: integer
                  example: 1

    PnlSettlementHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - meta
              - rows
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 10001
                      old_balance:
                        type: number
                        example: 4050
                      new_balance:
                        type: number
                        example: 3050
                      settled_amount:
                        type: number
                        example: -500
                      requested_time:
                        type: integer
                        description: Unix epoch time in ms
                        example: 1575014255089
                      settled_time:
                        type: integer
                        description: Unix epoch time in ms
                        example: 1575014255910
                      symbols:
                        type: array
                        items:
                          type: object
                          required:
                          - settled_amount
                          - symbol
                          properties:
                            symbol:
                              type: string
                              example: "PERP_BTC_USDC"
                            settled_amount:
                              # TODO should this be number?
                              type: integer
                              example: -500

    KeyInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: array
              items:
                type: object
                # TODO required
                properties:
                  orderly_key:
                    type: string
                    example: ed25519:B4yEc8xMjoqdUiKT5ZT1b2cUy5cggZrbMPvCrqyjkQhf
                  key_status:
                    type: string
                    description: ACTIVE / REMOVING / REMOVED
                    example: "ACTIVE"
                  ip_restriction_list:
                    type: array
                    items:
                      type: string
                  ip_restricion_status:
                    type: string
                    description: ALLOW_RESTRICTION_LIST / ALLOW_ALL_IPS / DISALLOW_ALL_IPS
                    example: "ALLOW_ALL_IPS"
                  expiration:
                    type: integer
                    example: 1689086651947
                  tag:
                    type: string
                    description: "Optional, could be null if there wasn't a tag"

    IpRestrictionResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              type: object
              required:
              - account_id
              - ip_restriction_list
              - orderly_key
              - tag
              properties:
                account_id:
                  type: string
                  example: "0x0f29bfb4c1bc9fea3f3be46bab6d795e22a6272354b136fde05f6b80cfcad546"
                orderly_key:
                  type: string
                  example: "ed25519:8tm7dnKYkSc3FzgPuJaw1wztr79eeZpN35nHW5pL5XhX"
                ip_restriction_list:
                  type: array
                  items:
                    type: string
                    example: "218.190.230.163"
                tag:
                  type: string
                  # TODO optional, but required?
                  description: "Optional, could be null if there wasn't a tag"

    SetIpRestrictionResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - ip_restriction_list
              properties:
                ip_restriction_list:
                  type: array
                  items:
                    type: string
                    example: "192.168.0.1-192.168.0.10"

    AllNotificationsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - required:
          - data
          type: object
          properties:
            data:
              required:
              - meta
              - rows
              type: object
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Notification'
                meta:
                  $ref: '#/components/schemas/PaginationMeta'

    Notification:
      type: object
      # TODO required
      properties:
        id:
          type: integer
          example: 12345
        message_type:
          type: string
          description: ORDER_FILLED
          example: "ORDER_FILLED"
        email:
          type: string
          description: email if bounded to the account
          example: test@orderly.network
        application_id:
          type: string
          description: wallet address of the account
          example: "0x0f29bfb4c1bc9fea3f3be46bab6d795e22a6272354b136fde05f6b80cfcad546"
        title:
          type: string
          example: " Your order has been filled"
        type:
          type: string
          description: TRADE / SYSTEM
          example: "TRADE"
        level:
          type: string
          description: GENERAL / IMPORTANT
          example: "GENERAL"
        content_summary:
          type: string
          example: "Your order to buy 1 NEAR-PERP has been filled: 0.5/1 at 1.9876."
        content:
          type: string
          example: "<p>Your order to buy 1 NEAR-PERP has been filled: 0.5/1 at 1.9876.</p>"
        content_raw:
          required:
          - executed_price
          - executed_quantity
          - executed_timestamp
          - order_id
          - side
          - symbol
          type: object
          properties:
            symbol:
              type: string
              example: "PERP_NEAR_USDC"
            side:
              type: string
              example: "BUY"
            order_id:
              type: integer
              example: 1
            executed_price:
              type: number
              example: 1.9876
            executed_quantity:
              type: number
              example: 0.5
            executed_timestamp:
              type: integer
              example: 1567382401000
        mark_read:
          type: integer
          description: "1 = READ, 0 = UNREAD"
          example: 1
        operator:
          type: integer
          example: 1
        created_time:
          type: integer
          example: 1670425970373
        announcement_id:
          type: integer

    UnreadNotificationsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - count
              - lastId
              - meta
              - rows
              properties:
                rows:
                  type: array
                  items:
                    $ref: '#/components/schemas/Notification'
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                count:
                  type: integer
                  description: number of unread messages
                lastId:
                  type: integer
                  description: the id of the last unread message

    VaultBalanceResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      chain_id:
                        type: integer
                        example: 80001
                      token:
                        type: string
                        example: "USDC"
                      balance:
                        type: number
                        example: 1000.12345

    GetAccountDetailsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - address
                - broker_id
              properties:
                address:
                  type: string
                  example: "0xfcc17f2b240380d56f0615e8f654e4ae3cee8957"
                broker_id:
                  type: string
                  example: "woofi_pro"

    GetBrokerDailyResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
          - data
          properties:
            data:
              type: object
              required:
              - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: "0x58220761ade872c94f85e62f1b24a74eec792aaa3677b6201071fd05c1698e89"
                      date:
                        type: string
                        example: "2023-09-14"
                      perp_volume:
                        type: number
                        example: 451580.9523
                      perp_maker_volume:
                        type: number
                        example: 123.456
                      perp_taker_volum:
                        type: number
                        example: 123.456
                      total_fee:
                        type: number
                        example: 123.456
                      broker_fee:
                        type: number
                        example: 123.456
                      address:
                        type: string
                        example: "0x0000000000"
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50



    GetUserDailyStatsResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      account_value:
                        type: number
                        example: 456789.12
                      date:
                        type: string
                        example: "2023-09-14"
                      perp_volume:
                        type: number
                        example: 451580.9523
                      pnl:
                        type: number
                        example: 123.45

    UserFeeRatesResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: "0x114f583aea808c5812e16109b6c087660285a26f0a31dcc0f9b54f1a6a0fefbd"
                      address:
                        type: string
                        example: "0xa8ec6970fec8842dd229eef170f624c3d77dab45"
                      is_default_fee_rate:
                        type: string
                        example: "true"
                      maker_fee_rate:
                        type: number
                        example: 0.03
                      taker_fee_rate:
                        type: number
                        example: 0.01

    CreateAlgoOrderChildRequest:
      type: object
      properties:
        symbol:
          type: string
        algo_type:
          type: string
        side:
          type: string
        type:
          type: string
        trigger_price:
          type: number
        price:
          type: number
        reduce_only:
          type: string
        trigger_price_type:
          type: string
        child_orders:
          type: array
          items:
            type: object
          description: Array of `CreateAlgoOrderChildRequest`

    EditAlgoOrderChildRequest:
      type: object
      properties:
        order_id:
          type: string
        trigger_price:
          type: number
        price:
          type: number
        quantity:
          type: number
        is_activated:
          type: string
        trigger_price_type:
          type: string
        child_orders:
          type: array
          items:
            type: object
          description: "Array of `EditAlgoOrderChildRequest`"

    GetReferralCodeResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: "0x114f583aea808c5812e16109b6c087660285a26f0a31dcc0f9b54f1a6a0fefbd"
                      user_address:
                        type: string
                        example: "0xa8ec6970fec8842dd229eef170f624c3d77dab45"
                      number_of_codes:
                        type: integer
                        example: "1"
                      total_invites:
                        type: integer
                        example: 0.03
                      total_traded:
                        type: number
                        example: 0.01
                      referee_volume:
                        type: number
                        example: 0.01
                      referee_fee:
                        type: number
                        example: 0.01
                      referral_codes:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                              example: "C4"
                            max_rebate_rate:
                              type: number
                              example: 0.4
                            referrer_rebate_rate:
                              type: number
                              example: 0.3
                            referee_rebate_rate:
                              type: number
                              example: 0.1
                            total_referrer_rebate:
                              type: number
                              example: 123.456
                            total_referee_rebate:
                              type: number
                              example: 123.456
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50

    VerifyReferralCodeResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                exist:
                  type: string
                  example: true
                  description: "`true`/`false`"

    CheckReferralCodeResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                referral_code:
                  type: string
                  example: code

    GetReferralInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                referrer_info:
                  type: object
                  properties:
                    1d_invites:
                      type: integer
                      example: 5
                    7d_invites:
                      type: integer
                      example: 5
                    30d_invites:
                      type: integer
                      example: 5
                    total_invites:
                      type: integer
                      example: 30
                    1d_traded:
                      type: integer
                      example: 5
                    7d_traded:
                      type: integer
                      example: 10
                    30d_traded:
                      type: integer
                      example: 20
                    total_traded:
                      type: integer
                      example: 25
                    1d_referee_volume:
                      type: number
                      example: 5
                    7d_referee_volume:
                      type: number
                      example: 10
                    30d_referee_volume:
                      type: number
                      example: 20
                    total_referee_volume:
                      type: number
                      example: 30
                    1d_referrer_rebate:
                      type: number
                      example: 5
                    7d_referrer_rebate:
                      type: number
                      example: 10
                    30d_referrer_rebate:
                      type: number
                      example: 20
                    total_referrer_rebate:
                      type: number
                      example: 30
                    referral_codes:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            example: "C4"
                          max_rebate_rate:
                            type: number
                            example: 0.4
                          referrer_rebate_rate:
                            type: number
                            example: 0.3
                          referee_rebate_rate:
                            type: number
                            example: 0.1
                          total_invites:
                            type: number
                            example: 30
                          total_traded:
                            type: number
                            example: 25
                referee_info:
                  type: object
                  properties:
                    referer_code:
                      type: string
                      example: "Kevin"
                    referee_rebate_rate:
                      type: number
                      example: 0.1
                    1d_referee_rebate:
                      type: number
                      example: 5
                    7d_referee_rebate:
                      type: number
                      example: 10
                    30d_referee_rebate:
                      type: number
                      example: 20
                    total_referee_rebate:
                      type: number
                      example: 30


    GetReferralHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: "0x114f583aea808c5812e16109b6c087660285a26f0a31dcc0f9b54f1a6a0fefbd"
                        description: "account_id of the referee"
                      user_address:
                        type: string
                        example: "0xa8ec6970fec8842dd229eef170f624c3d77dab45"
                        description: "address of the referee"
                      referral_code:
                        type: string
                        example: "C4"
                        description: "the referral code used by the referee"
                      volume:
                        type: number
                        example: 1229.12
                        description: "the total volume traded by the referee"
                      referral_rebate:
                        type: number
                        example: 2.22
                        description: "the total referral rebate paid to the referer based on the referee's fees paid"
                      date:
                        type: string
                        example: "2023-11-14"
                        description: "the date of this entry"
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50

    GetRebateSummaryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      referral_rebate:
                        type: number
                        example: 2.22
                        description: "the total referral rebate received by the user on this day"
                      volume:
                        type: number
                        example: 123.456
                        description: ""
                      date:
                        type: string
                        example: "2023-11-14"
                        description: ""
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50

    GetRefereeRebateSummaryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      referee_rebate:
                        type: number
                        example: 2.22
                        description: "the total referee rebate received by the user on this day"
                      date:
                        type: string
                        example: "2023-11-14"
                        description: ""

    GetRefereeHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      volume:
                        type: number
                        example: 1229.12
                      referee_rebate:
                        type: number
                        example: 2.22
                      date:
                        type: string
                        example: 2023-11-14
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50

    GetRefereeInfoResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: "0x114f583aea808c5812e16109b6c087660285a26f0a31dcc0f9b54f1a6a0fefbd"
                        description: "account_id of the referee"
                      user_address:
                        type: string
                        example: "0xa8ec6970fec8842dd229eef170f624c3d77dab45"
                        description: "address of the referee"
                      register_time:
                        type: number
                        example: 1663936930000
                        description: "register time of the referee"
                      code_binding_time:
                        type: number
                        example: 1663936930000
                        description: "the time the referee bind the account to this referral code"
                      referral_code:
                        type: string
                        example: "C4"
                        description: "the referral code used by the referee"
                      volume:
                        type: number
                        example: 1229.12
                        description: "the total volume traded by the referee"
                      referral_rebate:
                        type: number
                        example: 2.22
                        description: "the total referral rebate paid to the referer based on the referee's fees paid"
                      trade_status:
                        type: string
                        example: "Registered"
                        description: "`Registered` = Not traded but bind the code / `Traded` = bind the code and volume > 0"
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50


    GetDistributionHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              required:
                - rows
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12345
                        description: ""
                      token:
                        type: string
                        example: "USDC"
                        description: ""
                      type:
                        type: string
                        example: "REFERRAL_REBATE"
                        description: "`REFERRAL_REBATE`/`REFEREE_REBATE`/`BROKER_FEE`"
                      amount:
                        type: number
                        example: 12.12
                        description: ""
                      status:
                        type: string
                        example: "COMPLETED"
                        description: ""
                      created_time:
                        type: number
                        example: 1703511545867
                        description: ""
                      updated_time:
                        type: number
                        example: 1703511545867
                        description: ""
                meta:
                  type: object
                  properties:
                    records_per_page:
                      type: integer
                      example: 25
                    current_page:
                      type: integer
                      example: 1
                    total:
                      type: integer
                      example: 50

    DelegateSignerResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 100338
                account_id:
                  type: string
                  example: "0xd890c9b8b86fba7312b919e32bbabd619228b32d59f6d0f68fdf4451a684a654"
                valid_signer:
                  type: string
                  example: "0xc6c4c5c41efa74ebc63c675dcf7034e8382f3a42"

    GetCampaignsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "campaign_20230806"
                      start_time:
                        type: integer
                        example: 1575014255089
                      end_time:
                        type: integer
                        example: 1585014255089

    GetCampaignStatsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                updated_time:
                  type: integer
                  example: 1688371971550
                volume:
                  type: number
                  example: 800.12
                user_count:
                  type: integer
                  example: 10

    GetCampaignDetailedStatsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      broker_id:
                        type: string
                        example: "woofi_dex"
                      symbol:
                        type: string
                        example: "PERP_NEAR_USDC"
                      volume:
                        type: number
                        example: 800.12
                      user_count:
                        type: integer
                        example: 10

    GetCampaignRankingResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      broker_id:
                        type: string
                        example: "woofi_dex"
                      account_id:
                        type: string
                        example: "account01.eth"
                      address:
                        type: string
                        example: "0xaccount01"
                      volume:
                        type: number
                        example: 800.12
                      pnl:
                        type: number
                        example: 800.12
                      total_deposit_amount:
                        type: number
                        example: 800.12
                      total_withdrawal_amount:
                        type: number
                        example: 800.12
                      start_account_value:
                        type: number
                        example: 800.12
                      end_account_value:
                        type: number
                        example: 800.12

    GetCampaignUserResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                volume:
                  type: number
                  example: 1000.123
                filled_order_count:
                  type: integer
                  example: 10
                updated_time:
                  type: integer
                  example: 1688371971550
                pnl:
                  type: number
                  example: 800.12
                total_deposit_amount:
                  type: number
                  example: 800.12
                total_withdrawal_amount:
                  type: number
                  example: 800.12
                start_account_value:
                  type: number
                  example: 800.12
                end_account_value:
                  type: number
                  example: 800.12

    GetPointsLeaderboardResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                epoch_id:
                  type: number
                  example: 1
                meta:
                  $ref: '#/components/schemas/PaginationMeta'
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      rank:
                        type: number
                        example: 1
                      tier:
                        type: number
                        example: 1
                      address:
                        type: string
                        example: "0xfcc17f2b240380d56f0615e8f654e4ae3cee8957"
                      points:
                        type: number
                        example: 15000
                      previous_rank:
                        type: number
                        example: 4


    GetEpochPointsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                current_total_epoch_points:
                  type: number
                  example: 547
                current_epoch_points:
                  type: number
                  example: 17
                current_epoch_id:
                  type: number
                  example: 3
                total_traders:
                  type: number
                  example: 200
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      rank:
                        type: number
                        example: 1
                      epoch_id:
                        type: number
                        example: 1
                      total_points:
                        type: number
                        example: 15000

    GetEpochDatesResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_start_date:
                        type: number
                        example: 1708905600000
                      epoch_id:
                        type: number
                        example: 1
                      epoch_end_date:
                        type: number
                        example: 1708992000000

    GetPointsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                total_points:
                  type: number
                  example: 547
                global_rank:
                  type: number
                  example: 17
                tier:
                  type: number
                  example: 3
                current_epoch_points:
                  type: number
                  example: 200
                current_epoch_rank:
                  type: number
                  example: 3
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      rank:
                        type: number
                        example: 1
                      epoch_id:
                        type: number
                        example: 1
                      points:
                        type: number
                        example: 15000


    GetDefaultBrokerFeesResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                maker_fee_rate:
                  type: number
                  example: 0.0005
                taker_fee_rate:
                  type: number
                  example: 0.001

    GetWalletStakedBalanceResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                total_staked_balance:
                  type: number
                  example: 10000
                total_staked_order:
                  type: number
                  example: 2000
                total_staked_esorder:
                  type: number
                  example: 8000

    GetUnstakeDetailsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                total_unstake_order:
                  type: number
                  example: 500
                unstaked_end_time:
                  type: number
                  example: 1684671623456

    GetStakingOverviewResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                total_stake:
                  type: number
                  example: 845599630.06
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        example: "2023-05-20"
                      usd_reward:
                        type: number
                        example: 1268.34
                      total_staked_usd:
                        type: number
                        example: 117654321.99


    GetValorBatchInfoResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      batch_id:
                        type: number
                        example: 1
                      batch_start_time:
                        type: number
                        example: 1684502400000
                      batch_end_time:
                        type: number
                        example: 1684588800000


    GetValorPoolInfoResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                valor_price_usdc:
                  type: number
                  example: 50
                treasury_pool_value:
                  type: number
                  example: 20000
                next_settlement_date:
                  type: string
                  example: "2024-06-15"


    GetValorRedeemInfoResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                redeeming_valor_amount:
                  type: number
                  example: 1000
                chain_details:
                  type: array
                  items:
                    type: object
                    properties:
                      chain_id:
                        type: number
                        example: 1
                      pending_usdc:
                        type: number
                        example: 5000
                      available_usdc:
                        type: number
                        example: 1500


    GetParameterOfEachEpochForAllEpochsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                current_epoch:
                  type: number
                  example: 23
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      start_time:
                        type: number
                        example: 1711411200000
                      end_time:
                        type: number
                        example: 1711497600000
                      power_fees_paid_major:
                        type: number
                        example: 0.8
                      power_fees_paid_alts:
                        type: number
                        example: 0.8
                      power_staked_major:
                        type: number
                        example: 0.2
                      power_staked_alts:
                        type: number
                        example: 0.2
                      epoch_token:
                        type: string
                        example: "ORDER"
                      max_reward_amount:
                        type: number
                        example: 200000
                      k_constant_major:
                        type: number
                        example: 10
                      k_constant_alts:
                        type: number
                        example: 10


    GetEpochsDataResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                total_released_trading_rewards_order:
                  type: number
                  example: 3591403.07726818
                total_released_trading_rewards_escrow:
                  type: number
                  example: 0
                current_epoch:
                  type: number
                  example: 66
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      total_trader_score_major:
                        type: number
                        example: 8278.08333486
                      total_trader_score_alts:
                        type: number
                        example: 20901.92612209
                      epoch_token:
                        type: string
                        example: "ORDER"
                      reward_status:
                        type: string
                        example: "Confirmed"
                      r_major:
                        type: number
                        example: 150000
                      r_alts:
                        type: number
                        example: 50000


    GetBrokerAllocationHistoryResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      rewards:
                        type: array
                        items:
                          type: object
                          properties:
                            broker_id:
                              type: string
                              example: "woofi_pro"
                            epoch_token:
                              type: string
                              example: "ORDER"
                            pct_allocation:
                              type: number
                              example: 0.2
                            rewards_allocation:
                              type: number
                              example: 100

    GetWalletRewardsHistoryResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                wallet_lifetime_trading_rewards_order:
                  type: number
                  example: 3378176.44849794
                wallet_lifetime_trading_rewards_escrow:
                  type: number
                  example: 0
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      wallet_epoch_avg_staked:
                        type: number
                        example: 0
                      max_reward_amount:
                        type: number
                        example: 200000
                      epoch_token:
                        type: string
                        example: "ORDER"
                      reward_status:
                        type: string
                        example: "Pending"
                      r_wallet:
                        type: string
                        example: 199712.92309234

    GetAccountRewardsHistoryResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      broker:
                        type: array
                        items:
                          type: object
                          properties:
                            broker_id:
                              type: string
                              example: "woofi_pro"
                            wallet_epoch_avg_staked:
                              type: number
                              example: 2
                            trader_score_major:
                              type: number
                              example: 2
                            trader_score_alts:
                              type: number
                              example: 2
                            epoch_token:
                              type: string
                              example: "ORDER"
                            reward_status:
                              type: string
                              example: "Confirmed"
                            r_major:
                              type: number
                              example: 2
                            r_alts:
                              type: number
                              example: 2
                            r_account:
                              type: number
                              example: 2

    GetWalletGroupMarketMakingRewardsHistory:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                group_lifetime_mm_rewards_order:
                  type: number
                  example: 3378176.44849794
                group_lifetime_mm_rewards_escrow:
                  type: number
                  example: 0
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      epoch_avg_staked:
                        type: number
                        example: 0
                      max_reward_amount:
                        type: number
                        example: 200000
                      epoch_token:
                        type: string
                        example: "ORDER"
                      reward_status:
                        type: string
                        example: "PENDING"
                      total_reward:
                        type: number
                        example: 10


    GetCurrentEpochBrokerEstimateResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      broker_id:
                        type: string
                        example: "woofi_pro"
                      est_pct_allocation:
                        type: number
                        example: 0.2
                      est_allocation:
                        type: number
                        example: 8278.08333486


    GetCurrentEpochEstimateResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                est_trading_volume:
                  type: number
                  example: 120
                est_avg_stake:
                  type: number
                  example: 55
                est_stake_boost:
                  type: number
                  example: 2.228807384
                est_r_wallet:
                  type: number
                  example: 17.4236779074
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      broker_id:
                        type: string
                        example: "woofi_pro"
                      est_r_account:
                        type: number
                        example: 13.4236779074


    GetMMCurrentEpochEstimateResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                est_maker_volume:
                  type: number
                  example: 120
                est_avg_stake:
                  type: number
                  example: 55
                est_stake_boost:
                  type: number
                  example: 2.228807384
                est_r_wallet:
                  type: number
                  example: 17.4236779074


    GetParameterOfEachMMEpochForAllMMEpochsResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                current_epoch:
                  type: number
                  example: 23
                rows:
                  type: array
                  items:
                    type: object
                    properties:
                      epoch_id:
                        type: number
                        example: 2
                      start_time:
                        type: number
                        example: 1711411200000
                      end_time:
                        type: number
                        example: 1711497600000
                      epoch_token:
                        type: string
                        example: "ORDER"
                      max_reward_amount:
                        type: number
                        example: 200000


    GetLeverageSettingResponse:
      allOf:
        - $ref: "#/components/schemas/BasicResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                max_futures_leverage:
                  type: integer
                  example: 50

servers:
  - url: https://api-evm.orderly.org
    description: Mainnet
  - url: https://testnet-api-evm.orderly.org
    description: Testnet
